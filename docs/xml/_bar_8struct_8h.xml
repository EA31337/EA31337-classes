<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_bar_8struct_8h" kind="file" language="C++">
    <compoundname>Bar.struct.h</compoundname>
    <includes refid="_bar_8enum_8h" local="yes">Bar.enum.h</includes>
    <includes refid="_serializer_node_8enum_8h" local="yes">SerializerNode.enum.h</includes>
    <includedby refid="_chart_8struct_8h" local="yes">Chart.struct.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Bar.struct.h</label>
        <link refid="_bar_8struct_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SerializerNode.enum.h</label>
        <link refid="_serializer_node_8enum_8h"/>
      </node>
      <node id="2">
        <label>Bar.enum.h</label>
        <link refid="_bar_8enum_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>Bar.struct.h</label>
        <link refid="_bar_8struct_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Chart.struct.h</label>
        <link refid="_chart_8struct_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Indicator.struct.h</label>
        <link refid="_indicator_8struct_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_bar_o_h_l_c" prot="public">BarOHLC</innerclass>
    <innerclass refid="struct_bar_pattern" prot="public">BarPattern</innerclass>
    <innerclass refid="struct_bar_entry" prot="public">BarEntry</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Includes Bar&apos;s structs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//+------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EA31337<sp/>framework<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2016-2021,<sp/>31337<sp/>Investments<sp/>Ltd<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://github.com/EA31337<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//+------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_bar_8enum_8h" kindref="compound">Bar.enum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_serializer_node_8enum_8h" kindref="compound">SerializerNode.enum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="struct_bar_o_h_l_c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>datetime<sp/>time;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>open,<sp/>high,<sp/>low,<sp/>close;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Struct<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref>()<sp/>:<sp/>open(0),<sp/>high(0),<sp/>low(0),<sp/>close(0),<sp/>time(0){};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_open,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_high,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_low,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_close,<sp/>datetime<sp/>_time<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>time(_time),<sp/>open(_open),<sp/>high(_high),<sp/>low(_low),<sp/>close(_close)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_time<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_time<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_ohlc[],<sp/>datetime<sp/>_time<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>time(_time),<sp/>open(_ohlc[0]),<sp/>high(_ohlc[1]),<sp/>low(_ohlc[2]),<sp/>close(_ohlc[3])<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_time<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_time<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Struct<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetPivots(<ref refid="_bar_8enum_8h_1a295072f1c23c3ede5b7cc77e909570a2" kindref="member">ENUM_PP_TYPE</ref><sp/>_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_pp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_r1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_r2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_r3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_r4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_s1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_s2,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_s3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_s4)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_range<sp/>=<sp/>GetRange();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_type)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_CAMARILLA:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>set<sp/>of<sp/>eight<sp/>very<sp/>probable<sp/>levels<sp/>which<sp/>resemble<sp/>support<sp/>and<sp/>resistance<sp/>values<sp/>for<sp/>a<sp/>current<sp/>trend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetPivot();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(float)(close<sp/>+<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>12);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>(float)(close<sp/>+<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>6);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>(float)(close<sp/>+<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>(float)(close<sp/>+<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(float)(close<sp/>-<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>12);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>(float)(close<sp/>-<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>6);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>(float)(close<sp/>-<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>(float)(close<sp/>-<sp/>_range<sp/>*<sp/>1.1<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_CLASSIC:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetPivot();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>low;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R1<sp/>=<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>12<sp/>+<sp/>C<sp/>(1.0833)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>_pp<sp/>+<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R2<sp/>=<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>6<sp/>+<sp/>C<sp/>(1.1666)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>_pp<sp/>+<sp/>_range<sp/>*<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>R3<sp/>=<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>4<sp/>+<sp/>C<sp/>(1.25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>_pp<sp/>+<sp/>_range<sp/>*<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>R4<sp/>=<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>2<sp/>+<sp/>C<sp/>(1.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>high;<sp/><sp/></highlight><highlight class="comment">//<sp/>S1<sp/>=<sp/>C<sp/>-<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>12<sp/>(1.0833)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>_pp<sp/>-<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>S2<sp/>=<sp/>C<sp/>-<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>6<sp/>(1.1666)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>_pp<sp/>-<sp/>_range<sp/>*<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>S3<sp/>=<sp/>C<sp/>-<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>4<sp/>(1.25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>_pp<sp/>-<sp/>_range<sp/>*<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>S4<sp/>=<sp/>C<sp/>-<sp/>(H<sp/>-<sp/>L)<sp/>*<sp/>1.1<sp/>/<sp/>2<sp/>(1.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_FIBONACCI:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetPivot();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(float)(_pp<sp/>+<sp/>0.382<sp/>*<sp/>_range);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>(float)(_pp<sp/>+<sp/>0.618<sp/>*<sp/>_range);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>_pp<sp/>+<sp/>_range;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>_r1<sp/>+<sp/>_range;<sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(float)(_pp<sp/>-<sp/>0.382<sp/>*<sp/>_range);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>(float)(_pp<sp/>-<sp/>0.618<sp/>*<sp/>_range);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>_pp<sp/>-<sp/>_range;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>_s1<sp/>-<sp/>_range;<sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_FLOOR:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>basic<sp/>and<sp/>popular<sp/>type<sp/>of<sp/>pivots<sp/>used<sp/>in<sp/>Forex<sp/>trading<sp/>technical<sp/>analysis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetPivot();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pivot<sp/>(P)<sp/>=<sp/>(H<sp/>+<sp/>L<sp/>+<sp/>C)<sp/>/<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>low;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resistance<sp/>(R1)<sp/>=<sp/>(2<sp/>*<sp/>P)<sp/>-<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>_pp<sp/>+<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R2<sp/>=<sp/>P<sp/>+<sp/>H<sp/>-<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>high<sp/>+<sp/>2<sp/>*<sp/>(_pp<sp/>-<sp/>low);<sp/><sp/></highlight><highlight class="comment">//<sp/>R3<sp/>=<sp/>H<sp/>+<sp/>2<sp/>*<sp/>(P<sp/>-<sp/>L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>_r3;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>high;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>(S1)<sp/>=<sp/>(2<sp/>*<sp/>P)<sp/>-<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>_pp<sp/>-<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>S2<sp/>=<sp/>P<sp/>-<sp/>H<sp/>+<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>low<sp/>-<sp/>2<sp/>*<sp/>(high<sp/>-<sp/>_pp);<sp/><sp/></highlight><highlight class="comment">//<sp/>S3<sp/>=<sp/>L<sp/>-<sp/>2<sp/>*<sp/>(H<sp/>-<sp/>P)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>_s3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_TOM_DEMARK:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tom<sp/>DeMark&apos;s<sp/>pivot<sp/>point<sp/>(predicted<sp/>lows<sp/>and<sp/>highs<sp/>of<sp/>the<sp/>period).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetPivotDeMark();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>low;<sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>High<sp/>=<sp/>X<sp/>/<sp/>2<sp/>-<sp/>L.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>_pp<sp/>+<sp/>_range;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>_r1<sp/>+<sp/>_range;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>_r2<sp/>+<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>high;<sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>Low<sp/>=<sp/>X<sp/>/<sp/>2<sp/>-<sp/>H.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>_pp<sp/>-<sp/>_range;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>_s1<sp/>-<sp/>_range;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>_s2<sp/>-<sp/>_range;<sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PP_WOODIE:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Woodie&apos;s<sp/>pivot<sp/>point<sp/>are<sp/>giving<sp/>more<sp/>weight<sp/>to<sp/>the<sp/>Close<sp/>price<sp/>of<sp/>the<sp/>previous<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>are<sp/>similar<sp/>to<sp/>floor<sp/>pivot<sp/>points,<sp/>but<sp/>are<sp/>calculated<sp/>in<sp/>a<sp/>somewhat<sp/>different<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pp<sp/>=<sp/>GetWeighted();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pivot<sp/>(P)<sp/>=<sp/>(H<sp/>+<sp/>L<sp/>+<sp/>2<sp/>*<sp/>C)<sp/>/<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>low;<sp/><sp/></highlight><highlight class="comment">//<sp/>Resistance<sp/>(R1)<sp/>=<sp/>(2<sp/>*<sp/>P)<sp/>-<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r2<sp/>=<sp/>_pp<sp/>+<sp/>_range;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R2<sp/>=<sp/>P<sp/>+<sp/>H<sp/>-<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r3<sp/>=<sp/>_r1<sp/>+<sp/>_range;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_r4<sp/>=<sp/>_r2<sp/>+<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s1<sp/>=<sp/>(2<sp/>*<sp/>_pp)<sp/>-<sp/>high;<sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>(S1)<sp/>=<sp/>(2<sp/>*<sp/>P)<sp/>-<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s2<sp/>=<sp/>_pp<sp/>-<sp/>_range;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>S2<sp/>=<sp/>P<sp/>-<sp/>H<sp/>+<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s3<sp/>=<sp/>_s1<sp/>-<sp/>_range;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_s4<sp/>=<sp/>_s2<sp/>-<sp/>_range;<sp/><sp/></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_r4<sp/>&gt;<sp/>_r3<sp/>&amp;&amp;<sp/>_r3<sp/>&gt;<sp/>_r2<sp/>&amp;&amp;<sp/>_r2<sp/>&gt;<sp/>_r1<sp/>&amp;&amp;<sp/>_r1<sp/>&gt;<sp/>_pp<sp/>&amp;&amp;<sp/>_pp<sp/>&gt;<sp/>_s1<sp/>&amp;&amp;<sp/>_s1<sp/>&gt;<sp/>_s2<sp/>&amp;&amp;<sp/>_s2<sp/>&gt;<sp/>_s3<sp/>&amp;&amp;<sp/>_s3<sp/>&gt;<sp/>_s4;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetAppliedPrice(ENUM_APPLIED_PRICE<sp/>_ap)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BarOHLC::GetAppliedPrice(_ap,<sp/>open,<sp/>high,<sp/>low,<sp/>close);<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetBody()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>close<sp/>-<sp/>open;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetBodyAbs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(close<sp/>-<sp/>open);<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetBodyInPct(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_hundreds<sp/>=<sp/>100)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRange()<sp/>&gt;<sp/>0<sp/>?<sp/>_hundreds<sp/>/<sp/>GetRange()<sp/>*<sp/>GetBodyAbs()<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetChangeInPct(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_hundreds<sp/>=<sp/>100)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(close<sp/>-<sp/>open)<sp/>/<sp/>open<sp/>*<sp/>_hundreds;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetClose()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>close;<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetHigh()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>high;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetLow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>low;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMaxOC()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmax(open,<sp/>close);<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMedian()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(high<sp/>+<sp/>low)<sp/>/<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMinOC()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmin(open,<sp/>close);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetOpen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPivot()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetTypical();<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPivotDeMark()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Close<sp/>&lt;<sp/>Open<sp/>Then<sp/>X<sp/>=<sp/>H<sp/>+<sp/>2<sp/>*<sp/>L<sp/>+<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Close<sp/>&gt;<sp/>Open<sp/>Then<sp/>X<sp/>=<sp/>2<sp/>*<sp/>H<sp/>+<sp/>L<sp/>+<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Close<sp/>=<sp/>Open<sp/>Then<sp/>X<sp/>=<sp/>H<sp/>+<sp/>L<sp/>+<sp/>2<sp/>*<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_pp<sp/>=<sp/>open<sp/>&gt;<sp/>close<sp/>?<sp/>(high<sp/>+<sp/>(2<sp/>*<sp/>low)<sp/>+<sp/>close)<sp/>/<sp/>4<sp/>:<sp/>((2<sp/>*<sp/>high)<sp/>+<sp/>low<sp/>+<sp/>close)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open<sp/>==<sp/>close<sp/>?<sp/>(high<sp/>+<sp/>low<sp/>+<sp/>(2<sp/>*<sp/>close))<sp/>/<sp/>4<sp/>:<sp/>_pp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPivotWithOpen()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(open<sp/>+<sp/>high<sp/>+<sp/>low<sp/>+<sp/>close)<sp/>/<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPivotWithOpen(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_open)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_open<sp/>+<sp/>high<sp/>+<sp/>low<sp/>+<sp/>close)<sp/>/<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetRange()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>high<sp/>-<sp/>low;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetRangeChangeInPct(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_hundreds<sp/>=<sp/>100)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hundreds<sp/>-<sp/>(_hundreds<sp/>/<sp/>open<sp/>*<sp/>fabs(open<sp/>-<sp/>GetRange()));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetRangeInPips(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_ppp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRange()<sp/>/<sp/>_ppp;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetTypical()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(high<sp/>+<sp/>low<sp/>+<sp/>close)<sp/>/<sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWeighted()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(high<sp/>+<sp/>low<sp/>+<sp/>close<sp/>+<sp/>close)<sp/>/<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickMin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmin(GetWickLower(),<sp/>GetWickUpper());<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickLower()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinOC()<sp/>-<sp/>low;<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickLowerInPct()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRange()<sp/>&gt;<sp/>0<sp/>?<sp/>100<sp/>/<sp/>GetRange()<sp/>*<sp/>GetWickLower()<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickMax()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmax(GetWickLower(),<sp/>GetWickUpper());<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickSum()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetWickLower()<sp/>+<sp/>GetWickUpper();<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickUpper()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>high<sp/>-<sp/>GetMaxOC();<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetWickUpperInPct()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRange()<sp/>&gt;<sp/>0<sp/>?<sp/>100<sp/>/<sp/>GetRange()<sp/>*<sp/>GetWickUpper()<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetValues(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;_out[])<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayResize(_out,<sp/>4);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_index<sp/>=<sp/>ArraySize(_out)<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>_out[_index++]<sp/>=<sp/>open;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>_out[_index++]<sp/>=<sp/>high;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>_out[_index++]<sp/>=<sp/>low;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>_out[_index++]<sp/>=<sp/>close;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>GetAppliedPrice(ENUM_APPLIED_PRICE<sp/>_ap,<sp/>T<sp/>_o,<sp/>T<sp/>_h,<sp/>T<sp/>_l,<sp/>T<sp/>_c)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_ap)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_CLOSE:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_c;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_OPEN:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_o;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_HIGH:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_h;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_LOW:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_l;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_MEDIAN:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_h<sp/>+<sp/>_l)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_TYPICAL:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_h<sp/>+<sp/>_l<sp/>+<sp/>_c)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PRICE_WEIGHTED:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_h<sp/>+<sp/>_l<sp/>+<sp/>_c<sp/>+<sp/>_c)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_o;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>checkers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBearish()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open<sp/>&gt;<sp/>close;<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBullish()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open<sp/>&lt;<sp/>close;<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serializers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="_serializer_node_8enum_8h_1a0ef0c264678997787a46362c2a78a5bf" kindref="member">SerializerNodeType</ref><sp/>Serialize(Serializer<sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s.Pass(this,<sp/>&quot;time&quot;,<sp/>TimeToString(time));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>s.Pass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">,<sp/>open);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>s.Pass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;high&quot;</highlight><highlight class="normal">,<sp/>high);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>s.Pass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;low&quot;</highlight><highlight class="normal">,<sp/>low);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>s.Pass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">,<sp/>close);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SerializerNodeObject;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Converters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ToCSV()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringFormat(</highlight><highlight class="stringliteral">&quot;%d,%g,%g,%g,%g&quot;</highlight><highlight class="normal">,<sp/>time,<sp/>open,<sp/>high,<sp/>low,<sp/>close);<sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="struct_bar_pattern" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bar_pattern" kindref="compound">BarPattern</ref><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_pattern" kindref="compound">BarPattern</ref>()<sp/>:<sp/>pattern(BAR_TYPE_NONE)<sp/>{}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_pattern" kindref="compound">BarPattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref><sp/>&amp;_p)<sp/>:<sp/>pattern(BAR_TYPE_NONE)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_body_pct<sp/>=<sp/>_p.GetBodyInPct();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_price_chg<sp/>=<sp/>_p.GetChangeInPct();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_wick_lw_pct<sp/>=<sp/>_p.GetWickLowerInPct();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_wick_up_pct<sp/>=<sp/>_p.GetWickUpperInPct();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BEAR,<sp/>_p.open<sp/>&gt;<sp/>_p.close);<sp/><sp/></highlight><highlight class="comment">//<sp/>Candle<sp/>is<sp/>bearish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BULL,<sp/>_p.open<sp/>&lt;<sp/>_p.close);<sp/><sp/></highlight><highlight class="comment">//<sp/>Candle<sp/>is<sp/>bullish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_MED,<sp/>_p.GetMinOC()<sp/>&gt;<sp/>_p.GetMedian());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_PP,<sp/>_p.GetMinOC()<sp/>&gt;<sp/>_p.GetPivot());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_PP_DM,<sp/>_p.GetMinOC()<sp/>&gt;<sp/>_p.GetPivotDeMark());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_PP_OPEN,<sp/>_p.GetMinOC()<sp/>&gt;<sp/>_p.GetPivotWithOpen());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_WEIGHTED,<sp/>_p.GetMinOC()<sp/>&gt;<sp/>_p.GetWeighted());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_BODY_GT_WICKS,<sp/>_p.GetBody()<sp/>&gt;<sp/>_p.GetWickSum());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CHANGE_GT_02PC,<sp/>_price_chg<sp/>&gt;<sp/>0.2);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CHANGE_GT_05PC,<sp/>_price_chg<sp/>&gt;<sp/>0.5);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_GT_MED,<sp/>_p.GetClose()<sp/>&gt;<sp/>_p.GetMedian());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_GT_PP,<sp/>_p.GetClose()<sp/>&gt;<sp/>_p.GetPivot());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_GT_PP_DM,<sp/>_p.GetClose()<sp/>&gt;<sp/>_p.GetPivotDeMark());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_GT_PP_OPEN,<sp/>_p.GetClose()<sp/>&gt;<sp/>_p.GetPivotWithOpen());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_GT_WEIGHTED,<sp/>_p.GetClose()<sp/>&gt;<sp/>_p.GetWeighted());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_LT_PP,<sp/>_p.GetClose()<sp/>&lt;<sp/>_p.GetPivot());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_LT_PP_DM,<sp/>_p.GetClose()<sp/>&lt;<sp/>_p.GetPivotDeMark());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_LT_PP_OPEN,<sp/>_p.GetClose()<sp/>&lt;<sp/>_p.GetPivotWithOpen());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_CLOSE_LT_WEIGHTED,<sp/>_p.GetClose()<sp/>&lt;<sp/>_p.GetWeighted());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_HAS_WICK_LW,<sp/>_wick_lw_pct<sp/>&gt;<sp/>0.1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>lower<sp/>shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_HAS_WICK_UP,<sp/>_wick_up_pct<sp/>&gt;<sp/>0.1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>upper<sp/>shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_DOJI_DRAGON,<sp/>_wick_lw_pct<sp/>&gt;=<sp/>98);<sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>doji<sp/>dragonfly<sp/>pattern<sp/>(upper)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_DOJI_GRAVE,<sp/>_wick_up_pct<sp/>&gt;=<sp/>98);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>doji<sp/>gravestone<sp/>pattern<sp/>(lower)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_HAMMER_INV,<sp/>_wick_up_pct<sp/>&gt;<sp/>_body_pct<sp/>*<sp/>2<sp/>&amp;&amp;<sp/>_wick_lw_pct<sp/>&lt;<sp/>2);<sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>a<sp/>lower<sp/>hammer<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_HAMMER_UP,<sp/>_wick_lw_pct<sp/>&gt;<sp/>_body_pct<sp/>*<sp/>2<sp/>&amp;&amp;<sp/>_wick_up_pct<sp/>&lt;<sp/>2);<sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>an<sp/>upper<sp/>hammer<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_HANGMAN,<sp/>_wick_lw_pct<sp/>&gt;<sp/>80<sp/>&amp;&amp;<sp/>_wick_lw_pct<sp/>&lt;<sp/>98);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>a<sp/>hanging<sp/>man<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_LONG_SHADOW_LW,<sp/>_wick_lw_pct<sp/>&gt;=<sp/>60);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>long<sp/>lower<sp/>shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_LONG_SHADOW_UP,<sp/>_wick_up_pct<sp/>&gt;=<sp/>60);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>long<sp/>upper<sp/>shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_MARUBOZU,<sp/>_body_pct<sp/>&gt;=<sp/>98);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Full<sp/>body<sp/>with<sp/>no<sp/>or<sp/>small<sp/>wicks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_SHAVEN_LW,<sp/>_wick_up_pct<sp/>&gt;<sp/>50<sp/>&amp;&amp;<sp/>_wick_lw_pct<sp/>&lt;<sp/>2);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>a<sp/>shaven<sp/>bottom<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_SHAVEN_UP,<sp/>_wick_lw_pct<sp/>&gt;<sp/>50<sp/>&amp;&amp;<sp/>_wick_up_pct<sp/>&lt;<sp/>2);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>a<sp/>shaven<sp/>head<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPattern(BAR_TYPE_IS_SPINNINGTOP,<sp/>_wick_lw_pct<sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/>_wick_lw_pct<sp/>&gt;<sp/>30);<sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>a<sp/>spinning<sp/>top<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Struct<sp/>methods<sp/>for<sp/>bitwise<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckPattern(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flags)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pattern<sp/>&amp;<sp/>_flags)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckPatternsAll(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flags)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pattern<sp/>&amp;<sp/>_flags)<sp/>==<sp/>_flags;<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddPattern(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flags)<sp/>{<sp/>pattern<sp/>|=<sp/>_flags;<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemovePattern(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flags)<sp/>{<sp/>pattern<sp/>&amp;=<sp/>~_flags;<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPattern(<ref refid="_bar_8enum_8h_1a7cd6f8e6d0053b5d46caa2219e160821" kindref="member">ENUM_BAR_PATTERN</ref><sp/>_flag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_value)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddPattern(_flag);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemovePattern(_flag);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPattern(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flags)<sp/>{<sp/>pattern<sp/>=<sp/>_flags;<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serializers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerializeStub(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n1<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n2<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n3<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n4<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n5<sp/>=<sp/>1)<sp/>{}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="_serializer_node_8enum_8h_1a0ef0c264678997787a46362c2a78a5bf" kindref="member">SerializerNodeType</ref><sp/>Serialize(Serializer<sp/>&amp;_s)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_value<sp/>=<sp/>CheckPattern(1<sp/>&lt;&lt;<sp/>i)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_s.Pass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)(i<sp/>+<sp/>1),<sp/>_value);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SerializerNodeObject;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ToCSV()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringFormat(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;todo&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="struct_bar_entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bar_entry" kindref="compound">BarEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref><sp/>ohlc;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_pattern" kindref="compound">BarPattern</ref><sp/>pattern;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_entry" kindref="compound">BarEntry</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_entry" kindref="compound">BarEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref><sp/>&amp;_ohlc)<sp/>:<sp/>pattern(_ohlc)<sp/>{<sp/>ohlc<sp/>=<sp/>_ohlc;<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Struct<sp/>getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_o_h_l_c" kindref="compound">BarOHLC</ref><sp/>GetOHLC()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ohlc;<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="struct_bar_pattern" kindref="compound">BarPattern</ref><sp/>GetPattern()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pattern;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serializers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerializeStub(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n1<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n2<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n3<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n4<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_n5<sp/>=<sp/>1)<sp/>{}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="_serializer_node_8enum_8h_1a0ef0c264678997787a46362c2a78a5bf" kindref="member">SerializerNodeType</ref><sp/>Serialize(Serializer<sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>s.PassStruct(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ohlc&quot;</highlight><highlight class="normal">,<sp/>ohlc);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>s.PassStruct(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pattern&quot;</highlight><highlight class="normal">,<sp/>pattern);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SerializerNodeObject;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ToCSV()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringFormat(</highlight><highlight class="stringliteral">&quot;%s,%s&quot;</highlight><highlight class="normal">,<sp/>ohlc.ToCSV(),<sp/>pattern.ToCSV());<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="Bar.struct.h"/>
  </compounddef>
</doxygen>
