<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_market_8mqh" kind="file" language="C++">
    <compoundname>Market.mqh</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EA31337<sp/>framework<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2016-2021,<sp/>31337<sp/>Investments<sp/>Ltd<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://github.com/EA31337<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Prevents<sp/>processing<sp/>this<sp/>includes<sp/>file<sp/>for<sp/>the<sp/>second<sp/>time.</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>MARKET_MQH</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>MARKET_MQH</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Forward<sp/>declaration.</highlight></codeline>
<codeline><highlight class="normal">class<sp/>Market;</highlight></codeline>
<codeline><highlight class="normal">class<sp/>SymbolInfo;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Includes.</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Condition.enum.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Math.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Order.mqh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;SymbolInfo.mqh&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Structs.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Market<sp/>info.</highlight></codeline>
<codeline><highlight class="normal">struct<sp/>MarketData<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>pip_value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Pip<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>pip_digits;<sp/><sp/><sp/>//<sp/>Pip<sp/>digits<sp/>(precision).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>pts_per_pip;<sp/><sp/>//<sp/>Points<sp/>per<sp/>pip.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>vol_digits;<sp/><sp/><sp/>//<sp/>Volume<sp/>digits.</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Defines<sp/>macros<sp/>(for<sp/>MQL4<sp/>backward<sp/>compatibility).</highlight></codeline>
<codeline><highlight class="normal">double<sp/>MarketInfo(string<sp/>_symbol,<sp/>int<sp/>_type)<sp/>{<sp/>return<sp/>Market::MarketInfo(_symbol,<sp/>_type);<sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Class<sp/>to<sp/>provide<sp/>market<sp/>information.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">class<sp/>Market<sp/>:<sp/>public<sp/>SymbolInfo<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>protected:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Struct<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MarketData<sp/>minfo;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Implements<sp/>class<sp/>constructor<sp/>with<sp/>a<sp/>parameter.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Market(string<sp/>_symbol<sp/>=<sp/>NULL,<sp/>Log<sp/>*_log<sp/>=<sp/>NULL)<sp/>:<sp/>SymbolInfo(_symbol,<sp/>Object::IsValid(_log)<sp/>?<sp/>_log<sp/>:<sp/>new<sp/>Log)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Test<sp/>symbol<sp/>with<sp/>SymbolExists(_symbol)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>minfo.pip_digits<sp/>=<sp/>GetPipDigits(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>minfo.pip_value<sp/>=<sp/>GetPipValue(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>minfo.pts_per_pip<sp/>=<sp/>GetPointsPerPip(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>minfo.vol_digits<sp/>=<sp/>GetVolumeDigits(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Class<sp/>deconstructor.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>~Market()<sp/>{}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Getters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>pip<sp/>precision.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>int<sp/>GetPipDigits(string<sp/>_symbol)<sp/>{<sp/>return<sp/>GetDigits(_symbol)<sp/>&lt;<sp/>4<sp/>?<sp/>2<sp/>:<sp/>4;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>GetPipDigits()<sp/>{<sp/>return<sp/>minfo.pip_digits;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>pip<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetPipValue(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>_pdigits<sp/>=<sp/>GetPipDigits(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>10<sp/>&gt;&gt;<sp/>_pdigits;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetPipValue()<sp/>{<sp/>return<sp/>minfo.pip_value;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>current<sp/>spread<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>symbol<sp/>string<sp/>(optional)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Currency<sp/>pair<sp/>symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Return<sp/>symbol<sp/>trade<sp/>spread<sp/>level<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>int<sp/>GetSpreadInPts(string<sp/>_symbol)<sp/>{<sp/>return<sp/>GetSpread(_symbol);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>GetSpreadInPts()<sp/>{<sp/>return<sp/>GetSpread();<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>current<sp/>spread<sp/>in<sp/>float.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetSpreadInPips()<sp/>{<sp/>return<sp/>(GetAsk()<sp/>-<sp/>GetBid())<sp/>*<sp/>pow(10,<sp/>GetPipDigits());<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>current<sp/>spread<sp/>in<sp/>percent.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetSpreadInPct(string<sp/>_symbol)<sp/>{<sp/>return<sp/>100.0<sp/>*<sp/>(GetAsk(_symbol)<sp/>-<sp/>GetBid(_symbol))<sp/>/<sp/>GetAsk(_symbol);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetSpreadInPct()<sp/>{<sp/>return<sp/>GetSpreadInPct(symbol);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>number<sp/>of<sp/>points<sp/>per<sp/>pip.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>To<sp/>be<sp/>used<sp/>to<sp/>replace<sp/>Point<sp/>for<sp/>trade<sp/>parameters<sp/>calculations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>See:<sp/>http://forum.mql4.com/30672</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>int<sp/>GetPointsPerPip(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(unsigned<sp/>int)pow(10,<sp/>GetDigits(_symbol)<sp/>-<sp/>GetPipDigits(_symbol));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>GetPointsPerPip()<sp/>{<sp/>return<sp/>minfo.pts_per_pip;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>a<sp/>market<sp/>distance<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Minimal<sp/>permissible<sp/>distance<sp/>value<sp/>in<sp/>points<sp/>for<sp/>StopLoss/TakeProfit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>due<sp/>that<sp/>at<sp/>placing<sp/>of<sp/>a<sp/>pending<sp/>order,<sp/>the<sp/>open<sp/>price<sp/>cannot<sp/>be<sp/>too<sp/>close<sp/>to<sp/>the<sp/>market.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>The<sp/>minimal<sp/>distance<sp/>of<sp/>the<sp/>pending<sp/>price<sp/>from<sp/>the<sp/>current<sp/>market<sp/>one<sp/>in<sp/>points<sp/>can<sp/>be<sp/>obtained</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>using<sp/>the<sp/>MarketInfo()<sp/>function<sp/>with<sp/>the<sp/>MODE_STOPLEVEL<sp/>parameter.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Related<sp/>error<sp/>messages:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Error<sp/>130<sp/>(ERR_INVALID_STOPS)<sp/>happens<sp/>In<sp/>case<sp/>of<sp/>false<sp/>open<sp/>price<sp/>of<sp/>a<sp/>pending<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Error<sp/>145<sp/>(ERR_TRADE_MODIFY_DENIED)<sp/>happens<sp/>when<sp/>modification<sp/>of<sp/>order<sp/>was<sp/>too<sp/>close<sp/>to<sp/>market.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://book.mql4.com/appendix/limits</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>long<sp/>GetTradeDistanceInPts(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>fmax(GetTradeStopsLevel(_symbol),<sp/>GetFreezeLevel(_symbol));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>GetTradeDistanceInPts()<sp/>{<sp/>return<sp/>GetTradeDistanceInPts(symbol);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>a<sp/>market<sp/>distance<sp/>in<sp/>pips.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Minimal<sp/>permissible<sp/>distance<sp/>value<sp/>in<sp/>pips<sp/>for<sp/>StopLoss/TakeProfit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://book.mql4.com/appendix/limits</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetTradeDistanceInPips(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>_pts_per_pip<sp/>=<sp/>GetPointsPerPip(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(double)(_pts_per_pip<sp/>&gt;<sp/>0<sp/>?<sp/>(GetTradeDistanceInPts(_symbol)<sp/>/<sp/>_pts_per_pip)<sp/>:<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetTradeDistanceInPips()<sp/>{<sp/>return<sp/>GetTradeDistanceInPips(symbol);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>a<sp/>market<sp/>gap<sp/>in<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Minimal<sp/>permissible<sp/>distance<sp/>value<sp/>in<sp/>value<sp/>for<sp/>StopLoss/TakeProfit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://book.mql4.com/appendix/limits</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetTradeDistanceInValue(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>GetTradeDistanceInPts(_symbol)<sp/>*<sp/>GetPointSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetTradeDistanceInValue()<sp/>{<sp/>return<sp/>GetTradeDistanceInValue(symbol);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>a<sp/>volume<sp/>precision.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>int<sp/>GetVolumeDigits(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(unsigned<sp/>int)-log10(fmin(GetVolumeStep(_symbol),<sp/>GetVolumeMin(_symbol)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>int<sp/>GetVolumeDigits()<sp/>{<sp/>return<sp/>minfo.vol_digits;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Functional<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Refresh<sp/>data<sp/>in<sp/>pre-defined<sp/>variables<sp/>and<sp/>series<sp/>arrays.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/series/refreshrates</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>RefreshRates()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">//<sp/>In<sp/>MQL5<sp/>returns<sp/>true<sp/>for<sp/>backward<sp/>compatibility.</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::RefreshRates();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>market<sp/>data<sp/>about<sp/>securities.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/constants/environment_state/marketinfoconstants</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>MarketInfo(string<sp/>_symbol,<sp/>int<sp/>_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_LOW:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Low<sp/>day<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SymbolInfo::SymbolInfoDouble(_symbol,<sp/>SYMBOL_LASTLOW);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_HIGH:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>High<sp/>day<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SymbolInfo::SymbolInfoDouble(_symbol,<sp/>SYMBOL_LASTHIGH);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Time<sp/>of<sp/>the<sp/>last<sp/>quote.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(double)GetQuoteTime(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_BID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Last<sp/>incoming<sp/>bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetBid(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_ASK:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Last<sp/>incoming<sp/>ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetAsk(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_POINT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Point<sp/>size<sp/>in<sp/>the<sp/>quote<sp/>currency.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetPointSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_DIGITS:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol<sp/>digits<sp/>after<sp/>decimal<sp/>point.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetDigits(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_SPREAD:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Spread<sp/>value<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSpreadInPts(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_STOPLEVEL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Stop<sp/>level<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(double)GetTradeStopsLevel(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_LOTSIZE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lot<sp/>size<sp/>in<sp/>the<sp/>base<sp/>currency.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetTradeContractSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_TICKVALUE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Tick<sp/>value<sp/>in<sp/>the<sp/>deposit<sp/>currency.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetTickValue(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_TICKSIZE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Tick<sp/>size<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetTickSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_SWAPLONG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Swap<sp/>of<sp/>the<sp/>buy<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSwapLong(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_SWAPSHORT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Swap<sp/>of<sp/>the<sp/>sell<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSwapShort(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_LOTSTEP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>for<sp/>changing<sp/>lots.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetVolumeStep(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MINLOT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Minimum<sp/>permitted<sp/>amount<sp/>of<sp/>a<sp/>lot.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetVolumeMin(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MAXLOT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Maximum<sp/>permitted<sp/>amount<sp/>of<sp/>a<sp/>lot.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetVolumeMax(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_SWAPTYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Swap<sp/>calculation<sp/>method.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(double)GetSwapMode(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_PROFITCALCMODE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Profit<sp/>calculation<sp/>mode.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(double)SymbolInfo::SymbolInfoInteger(_symbol,<sp/>SYMBOL_TRADE_CALC_MODE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_STARTING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Market<sp/>starting<sp/>date.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Market<sp/>expiration<sp/>date.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_TRADEALLOWED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Trade<sp/>is<sp/>allowed<sp/>for<sp/>the<sp/>symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Terminal::IsTradeAllowed();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MARGINCALCMODE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Margin<sp/>calculation<sp/>mode.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MARGININIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Initial<sp/>margin<sp/>requirements<sp/>for<sp/>1<sp/>lot.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetMarginInit(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MARGINMAINTENANCE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Margin<sp/>to<sp/>maintain<sp/>open<sp/>orders<sp/>calculated<sp/>for<sp/>1<sp/>lot.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetMarginMaintenance(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MARGINHEDGED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Hedged<sp/>margin<sp/>calculated<sp/>for<sp/>1<sp/>lot.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_MARGINREQUIRED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Free<sp/>margin<sp/>required<sp/>to<sp/>open<sp/>1<sp/>lot<sp/>for<sp/>buying.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MODE_FREEZELEVEL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>freeze<sp/>level<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetFreezeLevel(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>MarketInfo(int<sp/>_type)<sp/>{<sp/>return<sp/>MarketInfo(symbol,<sp/>_type);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>delta<sp/>value<sp/>per<sp/>lot<sp/>in<sp/>account<sp/>currency<sp/>of<sp/>a<sp/>point<sp/>of<sp/>symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://forum.mql4.com/33975</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://forum.mql4.com/43064#515262</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://forum.mql4.com/41259/page3#512466</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/forum/127584</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/forum/135345</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/forum/133792/page3#512466</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetDeltaValue(string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Return<sp/>tick<sp/>value<sp/>in<sp/>the<sp/>deposit<sp/>currency<sp/>divided<sp/>by<sp/>tick<sp/>size<sp/>in<sp/>points.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>GetTickValue(_symbol)<sp/>/<sp/>GetTickSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetDeltaValue()<sp/>{<sp/>return<sp/>GetDeltaValue(symbol);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>last<sp/>price<sp/>change<sp/>in<sp/>pips.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetLastPriceChangeInPips()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>fmax(fabs(GetLastAsk()<sp/>-<sp/>GetAsk()),<sp/>fabs(GetLastBid()<sp/>-<sp/>GetBid()))<sp/>*<sp/>pow(10,<sp/>GetPipDigits());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>END:<sp/>Getters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Normalization<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Normalize<sp/>price<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>price<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>ticksize.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>NormalizePrice(string<sp/>_symbol,<sp/>double<sp/>p)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>See:<sp/>http://forum.mql4.com/47988</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>http://forum.mql4.com/43064#515262<sp/>zzuegg<sp/>reports<sp/>for<sp/>non-currency<sp/>DE30:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>MarketInfo(chart.symbol,MODE_TICKSIZE)<sp/>returns<sp/>0.5</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>MarketInfo(chart.symbol,MODE_DIGITS)<sp/>return<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Point<sp/>=<sp/>0.1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Rare<sp/>fix<sp/>when<sp/>a<sp/>change<sp/>in<sp/>tick<sp/>size<sp/>leads<sp/>to<sp/>a<sp/>change<sp/>in<sp/>tick<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>round(p<sp/>/<sp/>GetPointSize(_symbol))<sp/>*<sp/>GetTickSize(_symbol);</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>NormalizeDouble(_result,<sp/>GetDigits(_symbol));</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>NormalizePrice(double<sp/>p)<sp/>{<sp/>return<sp/>NormalizePrice(symbol,<sp/>p);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Normalize<sp/>lot<sp/>size.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>NormalizeLots(double<sp/>_lots,<sp/>bool<sp/>_ceil<sp/>=<sp/>false)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_lot_size<sp/>=<sp/>_lots;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_vol_step<sp/>=<sp/>GetVolumeStep()<sp/>&gt;<sp/>0.0<sp/>?<sp/>GetVolumeStep()<sp/>:<sp/>GetVolumeMin();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_vol_step<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Related:<sp/>http://forum.mql4.com/47988</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_precision<sp/>=<sp/>1<sp/>/<sp/>_vol_step;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Edge<sp/>case<sp/>when<sp/>step<sp/>is<sp/>higher<sp/>than<sp/>minimum.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lot_size<sp/>=<sp/>_ceil<sp/>?<sp/>ceil(_lots<sp/>*<sp/>_precision)<sp/>/<sp/>_precision<sp/>:<sp/>floor(_lots<sp/>*<sp/>_precision)<sp/>/<sp/>_precision;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_min_lot<sp/>=<sp/>fmax(GetVolumeMin(),<sp/>GetVolumeStep());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lot_size<sp/>=<sp/>fmin(fmax(_lot_size,<sp/>_min_lot),<sp/>GetVolumeMax());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_lot_size;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Normalize<sp/>SL/TP<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>NormalizeSLTP(double<sp/>_value,<sp/>ENUM_ORDER_TYPE<sp/>_cmd,<sp/>ENUM_ORDER_TYPE_VALUE<sp/>_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Buying<sp/>is<sp/>done<sp/>at<sp/>the<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>TakeProfit<sp/>and<sp/>StopLoss<sp/>levels<sp/>must<sp/>be<sp/>at<sp/>the<sp/>distance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>at<sp/>least<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>points<sp/>from<sp/>the<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Bid<sp/>-<sp/>StopLoss<sp/>&gt;=<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>(minimum<sp/>trade<sp/>distance)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmin(_value,<sp/>GetBid()<sp/>-<sp/>GetTradeDistanceInValue());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TakeProfit<sp/>-<sp/>Bid<sp/>&gt;=<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>(minimum<sp/>trade<sp/>distance)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmax(_value,<sp/>GetBid()<sp/>+<sp/>GetTradeDistanceInValue());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>mode:<sp/>%s!&quot;,<sp/>EnumToString(_mode),<sp/>__FUNCTION__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Selling<sp/>is<sp/>done<sp/>at<sp/>the<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>TakeProfit<sp/>and<sp/>StopLoss<sp/>levels<sp/>must<sp/>be<sp/>at<sp/>the<sp/>distance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>at<sp/>least<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>points<sp/>from<sp/>the<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>StopLoss<sp/>-<sp/>Ask<sp/>&gt;=<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>(minimum<sp/>trade<sp/>distance)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmax(_value,<sp/>GetAsk()<sp/>+<sp/>GetTradeDistanceInValue());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Ask<sp/>-<sp/>TakeProfit<sp/>&gt;=<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>(minimum<sp/>trade<sp/>distance)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmin(_value,<sp/>GetAsk()<sp/>-<sp/>GetTradeDistanceInValue());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>mode:<sp/>%s!&quot;,<sp/>EnumToString(_mode),<sp/>__FUNCTION__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>order<sp/>type:<sp/>%s!&quot;,<sp/>EnumToString(_cmd),<sp/>__FUNCTION__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>NormalizeSL(double<sp/>_value,<sp/>ENUM_ORDER_TYPE<sp/>_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NormalizePrice(NormalizeSLTP(_value,<sp/>_cmd,<sp/>ORDER_TYPE_SL));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>NormalizeTP(double<sp/>_value,<sp/>ENUM_ORDER_TYPE<sp/>_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NormalizePrice(NormalizeSLTP(_value,<sp/>_cmd,<sp/>ORDER_TYPE_TP));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Market<sp/>state<sp/>checking<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Check<sp/>whether<sp/>given<sp/>symbol<sp/>exists.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>SymbolExists(string<sp/>_symbol<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>GetAsk(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>GetLastError()<sp/>!=<sp/>ERR_MARKET_UNKNOWN_SYMBOL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Printer<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>Market<sp/>data<sp/>in<sp/>textual<sp/>representation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>ToString()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>StringFormat(&quot;Pip<sp/>digits/value:<sp/>%d/%g,<sp/>Spread:<sp/>%d<sp/>pts<sp/>(%g<sp/>pips;<sp/>%.4f%%),<sp/>Pts/pip:<sp/>%d,<sp/>&quot;<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Trade<sp/>distance:<sp/>%g<sp/>(%d<sp/>pts;<sp/>%.1f<sp/>pips),<sp/>Volume<sp/>digits:<sp/>%d,<sp/>&quot;<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Delta:<sp/>%g,<sp/>Last<sp/>change:<sp/>%g<sp/>pips&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPipDigits(),<sp/>GetPipValue(),<sp/>GetSpreadInPts(),<sp/>GetSpreadInPips(),<sp/>GetSpreadInPct(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPointsPerPip(),<sp/>GetTradeDistanceInValue(),<sp/>GetTradeDistanceInPts(),<sp/>GetTradeDistanceInPips(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetVolumeDigits(),<sp/>GetDeltaValue(),<sp/>GetLastPriceChangeInPips());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>Market<sp/>data<sp/>in<sp/>CSV<sp/>format.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>ToCSV(bool<sp/>_header<sp/>=<sp/>false)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>!_header<sp/>?<sp/>StringFormat(&quot;%d,%g,%d,%g,%.4f,%d,&quot;<sp/>+<sp/>&quot;%g,%d,%.1f,%d,&quot;<sp/>+<sp/>&quot;%g,%g&quot;,<sp/>GetPipDigits(),<sp/>GetPipValue(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetSpreadInPts(),<sp/>GetSpreadInPips(),<sp/>GetSpreadInPct(),<sp/>GetPointsPerPip(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetTradeDistanceInValue(),<sp/>GetTradeDistanceInPts(),<sp/>GetTradeDistanceInPips(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetVolumeDigits(),<sp/>GetDeltaValue(),<sp/>GetLastPriceChangeInPips())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;Pip<sp/>Digits,Pip<sp/>Value,Spread,Pts/pip,&quot;<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Trade<sp/>Distance<sp/>(value),Trade<sp/>Distance<sp/>(points),Trade<sp/>Distance<sp/>(pips),<sp/>Volume<sp/>digits,&quot;<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Delta,Last<sp/>change<sp/>(pips)&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Other<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Validate<sp/>whether<sp/>trade<sp/>operation<sp/>is<sp/>permitted.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>cmd</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Trade<sp/>command.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>sl</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Stop<sp/>loss<sp/>price<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>tp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Take<sp/>profit<sp/>price<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string<sp/>symbol</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Currency<sp/>symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>trade<sp/>operation<sp/>is<sp/>allowed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://book.mql4.com/appendix/limits</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://www.mql5.com/en/articles/2555#invalid_SL_TP_for_position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>TradeOpAllowed(ENUM_ORDER_TYPE<sp/>_cmd,<sp/>double<sp/>sl,<sp/>double<sp/>tp)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>ask<sp/>=<sp/>GetAsk();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>bid<sp/>=<sp/>GetBid();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>openprice<sp/>=<sp/>GetOpenOffer(_cmd);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>closeprice<sp/>=<sp/>GetCloseOffer(_cmd);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>minimum<sp/>distance<sp/>of<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>taken<sp/>into<sp/>account.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>distance<sp/>=<sp/>GetTradeDistanceInValue();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>bool<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Buying<sp/>is<sp/>done<sp/>at<sp/>the<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>for<sp/>Minimum<sp/>Distance<sp/>Limitation:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Bid<sp/>-<sp/>StopLoss<sp/>&gt;=<sp/>StopLevel<sp/><sp/>&amp;&amp;<sp/>TakeProfit<sp/>-<sp/>Bid<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Bid<sp/>-<sp/>StopLoss<sp/>&gt;<sp/>FreezeLevel<sp/>&amp;&amp;<sp/>TakeProfit<sp/>-<sp/>Bid<sp/>&gt;<sp/>FreezeLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sl<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tp<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>bid<sp/>-<sp/>sl<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>tp<sp/>-<sp/>bid<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;1.<sp/>Buy:<sp/>(%g<sp/>-<sp/>%g)<sp/>=<sp/>%g<sp/>&gt;=<sp/>%g;<sp/>%s&quot;,<sp/>Bid,<sp/>sl,<sp/>(bid<sp/>-<sp/>sl),<sp/>distance,<sp/>result<sp/>?<sp/>&quot;true&quot;<sp/>:<sp/>&quot;false&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;2.<sp/>Buy:<sp/>(%g<sp/>-<sp/>%g)<sp/>=<sp/>%g<sp/>&gt;=<sp/>%g;<sp/>%s&quot;,<sp/>tp,<sp/>Bid,<sp/>(tp<sp/>-<sp/>Bid),<sp/>distance,<sp/>result<sp/>?<sp/>&quot;true&quot;<sp/>:<sp/>&quot;false&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>TakeProfit<sp/>and<sp/>StopLoss<sp/>levels<sp/>must<sp/>be<sp/>at<sp/>the<sp/>distance<sp/>of<sp/>at<sp/>least<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>points<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>sl<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tp<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>bid<sp/>-<sp/>sl<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>tp<sp/>-<sp/>bid<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Selling<sp/>is<sp/>done<sp/>at<sp/>the<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>for<sp/>Minimum<sp/>Distance<sp/>Limitation:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>StopLoss<sp/>-<sp/>Ask<sp/>&gt;=<sp/>StopLevel<sp/><sp/>&amp;&amp;<sp/>Ask<sp/>-<sp/>TakeProfit<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>StopLoss<sp/>-<sp/>Ask<sp/>&gt;<sp/>FreezeLevel<sp/>&amp;&amp;<sp/>Ask<sp/>-<sp/>TakeProfit<sp/>&gt;<sp/>FreezeLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sl<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tp<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sl<sp/>-<sp/>ask<sp/>&gt;<sp/>distance<sp/>&amp;&amp;<sp/>ask<sp/>-<sp/>tp<sp/>&gt;<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;1.<sp/>Sell:<sp/>(%g<sp/>-<sp/>%g)<sp/>=<sp/>%g<sp/>&gt;=<sp/>%g;<sp/>%s&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl,<sp/>Ask,<sp/>(sl<sp/>-<sp/>Ask),<sp/>distance,<sp/>result<sp/>?<sp/>&quot;true&quot;<sp/>:<sp/>&quot;false&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;2.<sp/>Sell:<sp/>(%g<sp/>-<sp/>%g)<sp/>=<sp/>%g<sp/>&gt;=<sp/>%g;<sp/>%s&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ask,<sp/>tp,<sp/>(ask<sp/>-<sp/>tp),<sp/>distance,<sp/>result<sp/>?<sp/>&quot;true&quot;<sp/>:<sp/>&quot;false&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>TakeProfit<sp/>and<sp/>StopLoss<sp/>levels<sp/>must<sp/>be<sp/>at<sp/>the<sp/>distance<sp/>of<sp/>at<sp/>least<sp/>SYMBOL_TRADE_STOPS_LEVEL<sp/>points<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>sl<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tp<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sl<sp/>-<sp/>ask<sp/>&gt;<sp/>distance<sp/>&amp;&amp;<sp/>ask<sp/>-<sp/>tp<sp/>&gt;<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>when<sp/>performing<sp/>trade<sp/>operations:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Ask-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-SL<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>TP-OpenPrice<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Open<sp/>Price<sp/>of<sp/>a<sp/>Pending<sp/>Order<sp/>is<sp/>Below<sp/>the<sp/>current<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Ask<sp/>price<sp/>reaches<sp/>open<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ask<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>openprice<sp/>-<sp/>sl<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>tp<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>when<sp/>performing<sp/>trade<sp/>operations:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>OpenPrice-Bid<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>SL-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Open<sp/>Price<sp/>of<sp/>a<sp/>Pending<sp/>Order<sp/>is<sp/>Above<sp/>the<sp/>current<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Bid<sp/>price<sp/>reaches<sp/>open<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>openprice<sp/>-<sp/>bid<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>sl<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>openprice<sp/>-<sp/>tp<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>when<sp/>performing<sp/>trade<sp/>operations:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>OpenPrice-Ask<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-SL<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>TP-OpenPrice<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Open<sp/>Price<sp/>of<sp/>a<sp/>Pending<sp/>Order<sp/>is<sp/>Above<sp/>the<sp/>current<sp/>Ask<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Ask<sp/>price<sp/>reaches<sp/>open<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>openprice<sp/>-<sp/>ask<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>openprice<sp/>-<sp/>sl<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>tp<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Requirements<sp/>when<sp/>performing<sp/>trade<sp/>operations:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Bid-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>SL-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Open<sp/>Price<sp/>of<sp/>a<sp/>Pending<sp/>Order<sp/>is<sp/>Below<sp/>the<sp/>current<sp/>Bid<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Bid<sp/>price<sp/>reaches<sp/>open<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>bid<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>sl<sp/>-<sp/>openprice<sp/>&gt;=<sp/>distance<sp/>&amp;&amp;<sp/>openprice<sp/>-<sp/>tp<sp/>&gt;=<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Validate<sp/>whether<sp/>trade<sp/>operation<sp/>is<sp/>permitted.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>cmd</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Trade<sp/>command.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>price</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Take<sp/>profit<sp/>or<sp/>stop<sp/>loss<sp/>price<sp/>value.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>trade<sp/>operation<sp/>is<sp/>allowed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://book.mql4.com/appendix/limits</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>TradeOpAllowed(ENUM_ORDER_TYPE<sp/>_cmd,<sp/>double<sp/>price)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>distance<sp/>=<sp/>GetTradeDistanceInValue();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>bool<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>OpenPrice-Ask<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-SL<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>TP-OpenPrice<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Ask-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-SL<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>TP-OpenPrice<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Bid-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>SL-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>OpenPrice-Bid<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>SL-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Bid-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>SL-OpenPrice<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>SL-Ask<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>Ask-TP<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>OpenPrice-Ask<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>OpenPrice-SL<sp/>&gt;=<sp/>StopLevel<sp/>&amp;&amp;<sp/>TP-OpenPrice<sp/>&gt;=<sp/>StopLevel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>PrintFormat(&quot;%g<sp/>&gt;<sp/>%g&quot;,<sp/>fmin(fabs(GetBid()<sp/>-<sp/>price),<sp/>fabs(GetAsk()<sp/>-<sp/>price)),<sp/>distance);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>price<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fmin(fabs(GetBid()<sp/>-<sp/>price),<sp/>fabs(GetAsk()<sp/>-<sp/>price))<sp/>&gt;<sp/>distance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Conditions<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Checks<sp/>for<sp/>market<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_MARKET_CONDITION<sp/>_cond</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Market<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>MqlParam[]<sp/>_args</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Condition<sp/>arguments.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>the<sp/>condition<sp/>is<sp/>met.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>CheckCondition(ENUM_MARKET_CONDITION<sp/>_cond,<sp/>MqlParam<sp/>&amp;_args[])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MARKET_COND_IN_PEAK_HOURS:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>DateTime::Hour()<sp/>&gt;=<sp/>8<sp/>&amp;&amp;<sp/>DateTime::Hour()<sp/>&lt;=<sp/>16;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MARKET_COND_SPREAD_LE_10:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSpreadInPts()<sp/>&lt;=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MARKET_COND_SPREAD_GT_10:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSpreadInPts()<sp/>&gt;<sp/>10;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>MARKET_COND_SPREAD_GT_20:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetSpreadInPts()<sp/>&gt;<sp/>20;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>market<sp/>condition:<sp/>%s!&quot;,<sp/>EnumToString(_cond),<sp/>__FUNCTION_LINE__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>CheckCondition(ENUM_MARKET_CONDITION<sp/>_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlParam<sp/>_args[]<sp/>=<sp/>{};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Market::CheckCondition(_cond,<sp/>_args);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Serializers<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>serialized<sp/>representation<sp/>of<sp/>the<sp/>object<sp/>instance.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SerializerNodeType<sp/>Serialize(Serializer<sp/>&amp;_s)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>_text<sp/>=<sp/>ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_s.Pass(this,<sp/>&quot;value&quot;,<sp/>_text);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>SerializerNodeObject;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">#endif<sp/><sp/>//<sp/>MARKET_MQH</highlight></codeline>
    </programlisting>
    <location file="Market.mqh"/>
  </compounddef>
</doxygen>
