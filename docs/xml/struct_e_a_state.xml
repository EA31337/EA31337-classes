<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_e_a_state" kind="struct" language="C++" prot="public">
    <compoundname>EAState</compoundname>
    <includes refid="_e_a_8struct_8h" local="no">EA.struct.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_e_a_state_1a2cb5f19996e10d805d76710d3305c5a6" prot="public" static="no" mutable="no">
        <type>unsigned short</type>
        <definition>unsigned short EAState::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="112" column="18" bodyfile="EA.struct.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_a_state_1a24706a9630663dcef80bd62937d28ff3" prot="public" static="no" mutable="no">
        <type>unsigned short</type>
        <definition>unsigned short EAState::new_periods</definition>
        <argsstring></argsstring>
        <name>new_periods</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="113" column="18" bodyfile="EA.struct.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_a_state_1ad841122133c34374fabff8e1979f3a5b" prot="public" static="no" mutable="no">
        <type>DateTime</type>
        <definition>DateTime EAState::last_updated</definition>
        <argsstring></argsstring>
        <name>last_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="114" column="12" bodyfile="EA.struct.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_e_a_state_1a71f3e5f5625cfadcb27313219cbd2376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EAState::EAState</definition>
        <argsstring>()</argsstring>
        <name>EAState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="116" column="3" bodyfile="EA.struct.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a3219de59f8b1a25dbd67fba37d4a56e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::CheckFlag</definition>
        <argsstring>(unsigned short _flag)</argsstring>
        <name>CheckFlag</name>
        <param>
          <type>unsigned short</type>
          <declname>_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="119" column="8" bodyfile="EA.struct.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a841dd9b25c3860fa15bddf2d57bc24f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EAState::AddFlags</definition>
        <argsstring>(unsigned short _flags)</argsstring>
        <name>AddFlags</name>
        <param>
          <type>unsigned short</type>
          <declname>_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="120" column="8" bodyfile="EA.struct.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a6d91afdc0a9763e7cccc4c20ad1335ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EAState::RemoveFlags</definition>
        <argsstring>(unsigned short _flags)</argsstring>
        <name>RemoveFlags</name>
        <param>
          <type>unsigned short</type>
          <declname>_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="121" column="8" bodyfile="EA.struct.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a3620fc9949dfea6e318fc2dd405a441c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EAState::SetFlag</definition>
        <argsstring>(ENUM_EA_STATE_FLAGS _flag, bool _value)</argsstring>
        <name>SetFlag</name>
        <param>
          <type><ref refid="_e_a_8enum_8h_1a29a70afa2b287f6a269de56200a7ebc9" kindref="member">ENUM_EA_STATE_FLAGS</ref></type>
          <declname>_flag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="122" column="8" bodyfile="EA.struct.h" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1ad0debfd6e78ec55468385fed422f4672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EAState::SetFlags</definition>
        <argsstring>(unsigned short _flags)</argsstring>
        <name>SetFlags</name>
        <param>
          <type>unsigned short</type>
          <declname>_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="129" column="8" bodyfile="EA.struct.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a7ec40562c3e0c4c4fc833c5c7aa0b357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsActive</definition>
        <argsstring>()</argsstring>
        <name>IsActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="131" column="8" bodyfile="EA.struct.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a19371faf4c592c7cfb1d1d869cdc21e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsConnected</definition>
        <argsstring>()</argsstring>
        <name>IsConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="132" column="8" bodyfile="EA.struct.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1ad7105dcb1e2651c2507d4c06dd0e2014" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsEnabled</definition>
        <argsstring>()</argsstring>
        <name>IsEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="133" column="8" bodyfile="EA.struct.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a97ee74dba4a16b76988c33daed3d3ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsLibsAllowed</definition>
        <argsstring>()</argsstring>
        <name>IsLibsAllowed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="134" column="8" bodyfile="EA.struct.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1ac7f22ee2933e13229d9955efdc7f9cd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsOnInit</definition>
        <argsstring>()</argsstring>
        <name>IsOnInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="135" column="8" bodyfile="EA.struct.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1aaff8aa3ac81db472e0500141ba8c3902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsOnQuit</definition>
        <argsstring>()</argsstring>
        <name>IsOnQuit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="136" column="8" bodyfile="EA.struct.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a8172111cd804bf91802c046d22fa5253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsOptimizationMode</definition>
        <argsstring>()</argsstring>
        <name>IsOptimizationMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="137" column="8" bodyfile="EA.struct.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a35b4230d494ab59335d4aecf86d14941" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsTestingMode</definition>
        <argsstring>()</argsstring>
        <name>IsTestingMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="138" column="8" bodyfile="EA.struct.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a9f0a98758da065b24c8b69d1e7d65f2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsTradeAllowed</definition>
        <argsstring>()</argsstring>
        <name>IsTradeAllowed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="139" column="8" bodyfile="EA.struct.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a467d7f5cbce89dd7579e72a3107cec1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EAState::IsVisualMode</definition>
        <argsstring>()</argsstring>
        <name>IsVisualMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="140" column="8" bodyfile="EA.struct.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="struct_e_a_state_1a54bbd12201893a1e5091d2f9121e3bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EAState::Enable</definition>
        <argsstring>(bool _state=true)</argsstring>
        <name>Enable</name>
        <param>
          <type>bool</type>
          <declname>_state</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EA.struct.h" line="142" column="8" bodyfile="EA.struct.h" bodystart="142" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines EA state variables. </para>
    </detaileddescription>
    <location file="EA.struct.h" line="111" column="1" bodyfile="EA.struct.h" bodystart="111" bodyend="143"/>
    <listofallmembers>
      <member refid="struct_e_a_state_1a841dd9b25c3860fa15bddf2d57bc24f1" prot="public" virt="non-virtual"><scope>EAState</scope><name>AddFlags</name></member>
      <member refid="struct_e_a_state_1a3219de59f8b1a25dbd67fba37d4a56e6" prot="public" virt="non-virtual"><scope>EAState</scope><name>CheckFlag</name></member>
      <member refid="struct_e_a_state_1a71f3e5f5625cfadcb27313219cbd2376" prot="public" virt="non-virtual"><scope>EAState</scope><name>EAState</name></member>
      <member refid="struct_e_a_state_1a54bbd12201893a1e5091d2f9121e3bc6" prot="public" virt="non-virtual"><scope>EAState</scope><name>Enable</name></member>
      <member refid="struct_e_a_state_1a2cb5f19996e10d805d76710d3305c5a6" prot="public" virt="non-virtual"><scope>EAState</scope><name>flags</name></member>
      <member refid="struct_e_a_state_1a7ec40562c3e0c4c4fc833c5c7aa0b357" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsActive</name></member>
      <member refid="struct_e_a_state_1a19371faf4c592c7cfb1d1d869cdc21e8" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsConnected</name></member>
      <member refid="struct_e_a_state_1ad7105dcb1e2651c2507d4c06dd0e2014" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsEnabled</name></member>
      <member refid="struct_e_a_state_1a97ee74dba4a16b76988c33daed3d3ede" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsLibsAllowed</name></member>
      <member refid="struct_e_a_state_1ac7f22ee2933e13229d9955efdc7f9cd9" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsOnInit</name></member>
      <member refid="struct_e_a_state_1aaff8aa3ac81db472e0500141ba8c3902" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsOnQuit</name></member>
      <member refid="struct_e_a_state_1a8172111cd804bf91802c046d22fa5253" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsOptimizationMode</name></member>
      <member refid="struct_e_a_state_1a35b4230d494ab59335d4aecf86d14941" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsTestingMode</name></member>
      <member refid="struct_e_a_state_1a9f0a98758da065b24c8b69d1e7d65f2d" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsTradeAllowed</name></member>
      <member refid="struct_e_a_state_1a467d7f5cbce89dd7579e72a3107cec1e" prot="public" virt="non-virtual"><scope>EAState</scope><name>IsVisualMode</name></member>
      <member refid="struct_e_a_state_1ad841122133c34374fabff8e1979f3a5b" prot="public" virt="non-virtual"><scope>EAState</scope><name>last_updated</name></member>
      <member refid="struct_e_a_state_1a24706a9630663dcef80bd62937d28ff3" prot="public" virt="non-virtual"><scope>EAState</scope><name>new_periods</name></member>
      <member refid="struct_e_a_state_1a6d91afdc0a9763e7cccc4c20ad1335ee" prot="public" virt="non-virtual"><scope>EAState</scope><name>RemoveFlags</name></member>
      <member refid="struct_e_a_state_1a3620fc9949dfea6e318fc2dd405a441c" prot="public" virt="non-virtual"><scope>EAState</scope><name>SetFlag</name></member>
      <member refid="struct_e_a_state_1ad0debfd6e78ec55468385fed422f4672" prot="public" virt="non-virtual"><scope>EAState</scope><name>SetFlags</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
