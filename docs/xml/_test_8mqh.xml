<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_test_8mqh" kind="file" language="C++">
    <compoundname>Test.mqh</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EA31337<sp/>framework<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2016-2021,<sp/>31337<sp/>Investments<sp/>Ltd<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://github.com/EA31337<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@file</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Provides<sp/>base<sp/>functionality<sp/>for<sp/>testing<sp/>purposes.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Define<sp/>an<sp/>assert<sp/>macros.</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>assertTrueOrFail(cond,<sp/>msg)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!(cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(INIT_FAILED);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertFalseOrFail(cond,<sp/>msg)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>((cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(INIT_FAILED);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertTrueOrReturn(cond,<sp/>msg,<sp/>ret)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!(cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(ret);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertTrueOrReturnFalse(cond,<sp/>msg)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!(cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(false);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertFalseOrReturn(cond,<sp/>msg,<sp/>ret)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>((cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(ret);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertTrueOrExit(cond,<sp/>msg)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!(cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ExpertRemove();<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>assertFalseOrExit(cond,<sp/>msg)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>((cond))<sp/>{<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Alert(msg<sp/>+<sp/>&quot;<sp/>-<sp/>Assert<sp/>fail<sp/>on<sp/>&quot;<sp/>+<sp/>#cond<sp/>+<sp/>&quot;<sp/>in<sp/>&quot;<sp/>+<sp/>__FILE__<sp/>+<sp/>&quot;:&quot;<sp/>+<sp/>(string)<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ExpertRemove();<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="Test.mqh"/>
  </compounddef>
</doxygen>
