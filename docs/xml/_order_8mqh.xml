<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_order_8mqh" kind="file" language="C++">
    <compoundname>Order.mqh</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EA31337<sp/>framework<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2016-2021,<sp/>31337<sp/>Investments<sp/>Ltd<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://github.com/EA31337<sp/>|</highlight></codeline>
<codeline><highlight class="normal">//+------------------------------------------------------------------+</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@file</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Implements<sp/>class<sp/>for<sp/>managing<sp/>orders.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Prevents<sp/>processing<sp/>this<sp/>includes<sp/>file<sp/>for<sp/>the<sp/>second<sp/>time.</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>ORDER_MQH</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ORDER_MQH</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Includes.</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Action.enum.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Convert.mqh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Log.mqh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Order.enum.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Order.struct.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;String.mqh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;SymbolInfo.mqh&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*<sp/>Defines<sp/>for<sp/>backward<sp/>compatibility.<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Index<sp/>in<sp/>the<sp/>order<sp/>pool.</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>SELECT_BY_POS</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>SELECT_BY_POS<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Index<sp/>by<sp/>the<sp/>order<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>SELECT_BY_TICKET</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>SELECT_BY_TICKET<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>POSITION_TICKET</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>POSITION_TICKET<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>ORDER_TICKET</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ORDER_TICKET<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>DEAL_TICKET</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>DEAL_TICKET<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>ORDER_EXTERNAL_ID</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Order<sp/>identifier<sp/>in<sp/>an<sp/>external<sp/>trading<sp/>system<sp/>(on<sp/>the<sp/>Exchange).</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Note:<sp/>Required<sp/>for<sp/>backward<sp/>compatibility<sp/>in<sp/>MQL4.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_property_string</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ORDER_EXTERNAL_ID<sp/>((ENUM_ORDER_PROPERTY_STRING)20)</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>ORDER_REASON</highlight></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>reason<sp/>or<sp/>source<sp/>for<sp/>placing<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Note:<sp/>Required<sp/>for<sp/>backward<sp/>compatibility<sp/>in<sp/>MQL4.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ORDER_REASON<sp/>((ENUM_ORDER_PROPERTY_INTEGER)23)</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>__MQLBUILD__</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Defines.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Mode<sp/>constants.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>@see:<sp/>https://docs.mql4.com/trading/orderselect</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>MODE_TRADES<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>MODE_HISTORY<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Class<sp/>to<sp/>provide<sp/>methods<sp/>to<sp/>deal<sp/>with<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>-<sp/>https://www.mql5.com/en/articles/211</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">class<sp/>Order<sp/>:<sp/>public<sp/>SymbolInfo<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Default<sp/>enumerations:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Trade<sp/>operation:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>0:<sp/>OP_BUY<sp/>(Buy<sp/>operation)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>1:<sp/>OP_SELL<sp/>(Sell<sp/>operation)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>2:<sp/>OP_BUYLIMIT<sp/>(Buy<sp/>limit<sp/>pending<sp/>order)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>3:<sp/>OP_SELLLIMIT<sp/>(Sell<sp/>limit<sp/>pending<sp/>order)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>4:<sp/>OP_BUYSTOP<sp/>(Buy<sp/>stop<sp/>pending<sp/>order)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>5:<sp/>OP_SELLSTOP<sp/>(Sell<sp/>stop<sp/>pending<sp/>order)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>protected:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Struct<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OrderParams<sp/>oparams;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OrderData<sp/>odata;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeRequest<sp/>orequest;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Trade<sp/>Request<sp/>Structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeCheckResult<sp/>oresult_check;<sp/><sp/>//<sp/>Results<sp/>of<sp/>a<sp/>Trade<sp/>Request<sp/>Check.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeResult<sp/>oresult;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Trade<sp/>Request<sp/>Result.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Ref&lt;Log&gt;<sp/>logger;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Logger.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Used<sp/>for<sp/>order<sp/>selection<sp/>in<sp/>MQL5.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>long<sp/>selected_ticket_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_SELECT_TYPE<sp/>selected_ticket_type;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Class<sp/>constructors.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Order()<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Order(long<sp/>_ticket_no)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.SetTicket(_ticket_no);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Order(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>bool<sp/>_send<sp/>=<sp/>true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orequest<sp/>=<sp/>_request;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_send)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!oparams.dummy)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderSend();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderSendDummy();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Order(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>const<sp/>OrderParams<sp/>&amp;_oparams,<sp/>bool<sp/>_send<sp/>=<sp/>true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orequest<sp/>=<sp/>_request;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oparams<sp/>=<sp/>_oparams;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_send)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!oparams.dummy)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderSend();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderSendDummy();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Class<sp/>copy<sp/>constructors.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Order(const<sp/>Order<sp/>&amp;_order)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oparams<sp/>=<sp/>_order.oparams;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata<sp/>=<sp/>_order.odata;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orequest<sp/>=<sp/>_order.orequest;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult_check<sp/>=<sp/>_order.oresult_check;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult<sp/>=<sp/>_order.oresult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Class<sp/>deconstructor.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>~Order()<sp/>{}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>Log<sp/>*Logger()<sp/>{<sp/>return<sp/>logger.Ptr();<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Getters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>order&apos;s<sp/>params.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OrderParams<sp/>GetParams()<sp/>const<sp/>{<sp/>return<sp/>oparams;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>order&apos;s<sp/>data.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OrderData<sp/>GetData()<sp/>const<sp/>{<sp/>return<sp/>odata;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>order&apos;s<sp/>request.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeRequest<sp/>GetRequest()<sp/>{<sp/>return<sp/>orequest;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>order&apos;s<sp/>result.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeResult<sp/>GetResult()<sp/>{<sp/>return<sp/>oresult;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>order&apos;s<sp/>check<sp/>result.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MqlTradeCheckResult<sp/>GetResultCheck()<sp/>{<sp/>return<sp/>oresult_check;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Setters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>State<sp/>checkers<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Is<sp/>order<sp/>is<sp/>open.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>IsClosed()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.time_close<sp/>==<sp/>0<sp/>||<sp/>odata.price_close<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.price_close<sp/>=<sp/>Order::OrderClosePrice();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(odata.price_close<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.time_close<sp/>=<sp/>Order::OrderCloseTime();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.time_close<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>odata.price_close<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Is<sp/>order<sp/>closed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>IsOpen()<sp/>{<sp/>return<sp/>!IsClosed();<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Check<sp/>whether<sp/>order<sp/>is<sp/>active<sp/>and<sp/>open.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>IsOrderOpen()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderOpenTime()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!(OrderCloseTime()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Should<sp/>order<sp/>be<sp/>closed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>order<sp/>should<sp/>be<sp/>closed,<sp/>otherwise<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>ShouldCloseOrder()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>oparams.HasCloseCondition()<sp/>&amp;&amp;<sp/>Order::CheckCondition(oparams.cond_close,<sp/>oparams.cond_close_args);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>State<sp/>checking<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Check<sp/>whether<sp/>order<sp/>is<sp/>selected<sp/>and<sp/>it<sp/>is<sp/>same<sp/>as<sp/>the<sp/>class<sp/>one.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>IsSelected()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>ticket_id<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>is_selected<sp/>=<sp/>(odata.ticket<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ticket_id<sp/>==<sp/>odata.ticket);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>is_selected;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>IsSelectedDummy()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Trade<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Gets<sp/>allowed<sp/>order<sp/>filling<sp/>mode.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#symbol_filling_mode</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE_FILLING<sp/>GetOrderFilling(const<sp/>string<sp/>_symbol)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Default<sp/>policy<sp/>is<sp/>used<sp/>only<sp/>for<sp/>market<sp/>orders<sp/>(Buy<sp/>and<sp/>Sell),<sp/>limit<sp/>and<sp/>stop<sp/>limit<sp/>orders</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>and<sp/>only<sp/>for<sp/>the<sp/>symbols<sp/>with<sp/>Market<sp/>or<sp/>Exchange<sp/>execution.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>case<sp/>of<sp/>partial<sp/>filling<sp/>a<sp/>market<sp/>or<sp/>limit<sp/>order<sp/>with<sp/>remaining<sp/>volume<sp/>is<sp/>not<sp/>canceled<sp/>but<sp/>processed<sp/>further.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ENUM_ORDER_TYPE_FILLING<sp/>_result<sp/>=<sp/>ORDER_FILLING_RETURN;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>long<sp/>_filling_mode<sp/>=<sp/>SymbolInfo::GetFillingMode(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((_filling_mode<sp/>&amp;<sp/>SYMBOL_FILLING_IOC)<sp/>==<sp/>SYMBOL_FILLING_IOC)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Execute<sp/>a<sp/>deal<sp/>with<sp/>the<sp/>volume<sp/>maximally<sp/>available<sp/>in<sp/>the<sp/>market<sp/>within<sp/>that<sp/>indicated<sp/>in<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>case<sp/>the<sp/>order<sp/>cannot<sp/>be<sp/>filled<sp/>completely,<sp/>the<sp/>available<sp/>volume<sp/>of<sp/>the<sp/>order<sp/>will<sp/>be<sp/>filled,<sp/>and<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>remaining<sp/>volume<sp/>will<sp/>be<sp/>canceled.<sp/>The<sp/>possibility<sp/>of<sp/>using<sp/>IOC<sp/>orders<sp/>is<sp/>determined<sp/>at<sp/>the<sp/>trade<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>ORDER_FILLING_IOC;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>((_filling_mode<sp/>&amp;<sp/>SYMBOL_FILLING_FOK)<sp/>==<sp/>SYMBOL_FILLING_FOK)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>A<sp/>deal<sp/>can<sp/>be<sp/>executed<sp/>only<sp/>with<sp/>the<sp/>specified<sp/>volume.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>MT4,<sp/>orders<sp/>are<sp/>usually<sp/>on<sp/>an<sp/>FOK<sp/>basis<sp/>in<sp/>that<sp/>you<sp/>get<sp/>a<sp/>complete<sp/>fill<sp/>or<sp/>nothing.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>the<sp/>necessary<sp/>amount<sp/>of<sp/>a<sp/>financial<sp/>instrument<sp/>is<sp/>currently<sp/>unavailable<sp/>in<sp/>the<sp/>market,<sp/>the<sp/>order<sp/>will<sp/>not<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>executed.<sp/>The<sp/>required<sp/>volume<sp/>can<sp/>be<sp/>filled<sp/>using<sp/>several<sp/>offers<sp/>available<sp/>on<sp/>the<sp/>market<sp/>at<sp/>the<sp/>moment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>ORDER_FILLING_FOK;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Gets<sp/>order&apos;s<sp/>filling<sp/>mode.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ENUM_ORDER_TYPE_FILLING<sp/>GetOrderFilling()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Update(ORDER_TYPE_FILLING);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.type_filling;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>allowed<sp/>order<sp/>filling<sp/>modes.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE_FILLING<sp/>GetOrderFilling(const<sp/>string<sp/>_symbol,<sp/>const<sp/>long<sp/>_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>ENUM_SYMBOL_TRADE_EXECUTION<sp/>_exe_mode<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ENUM_SYMBOL_TRADE_EXECUTION)SymbolInfo::SymbolInfoInteger(_symbol,<sp/>SYMBOL_TRADE_EXEMODE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>long<sp/>_filling_mode<sp/>=<sp/>SymbolInfo::GetFillingMode(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>((_filling_mode<sp/>==<sp/>0<sp/>||<sp/>(_type<sp/>&gt;=<sp/>ORDER_FILLING_RETURN)<sp/>||<sp/>((_filling_mode<sp/>&amp;<sp/>(_type<sp/>+<sp/>1))<sp/>!=<sp/>_type<sp/>+<sp/>1))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(((_exe_mode<sp/>==<sp/>SYMBOL_TRADE_EXECUTION_EXCHANGE)<sp/>||<sp/>(_exe_mode<sp/>==<sp/>SYMBOL_TRADE_EXECUTION_INSTANT))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ORDER_FILLING_RETURN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((_filling_mode<sp/>==<sp/>SYMBOL_FILLING_IOC)<sp/>?<sp/>ORDER_FILLING_IOC<sp/>:<sp/>ORDER_FILLING_FOK))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(ENUM_ORDER_TYPE_FILLING)_type);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>MT<sp/>ORDER<sp/>METHODS<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Order<sp/>getters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>close<sp/>price<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderClosePrice()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderClosePrice();</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@docs<sp/>https://www.mql5.com/en/docs/trading/HistoryDealGetDouble</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ENUM_DEAL_ENTRY<sp/>_deal_entry<sp/>=<sp/>(ENUM_DEAL_ENTRY)HistoryDealGetInteger(_deal_ticket,<sp/>DEAL_ENTRY);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_deal_entry<sp/>==<sp/>DEAL_ENTRY_OUT<sp/>||<sp/>_deal_entry<sp/>==<sp/>DEAL_ENTRY_OUT_BY)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_PRICE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetClosePrice()<sp/>{<sp/>return<sp/>IsClosed()<sp/>?<sp/>odata.price_close<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>open<sp/>time<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>http://docs.mql4.com/trading/orderopentime</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>datetime<sp/>OrderOpenTime()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>http://docs.mql4.com/trading/orderopentime</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderOpenTime();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ENUM_DEAL_ENTRY<sp/>_deal_entry<sp/>=<sp/>(ENUM_DEAL_ENTRY)HistoryDealGetInteger(_deal_ticket,<sp/>DEAL_ENTRY);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_deal_entry<sp/>==<sp/>DEAL_ENTRY_IN)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>HistoryDealGetInteger(_deal_ticket,<sp/>DEAL_TIME);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(datetime)_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>datetime<sp/>GetOpenTime()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.time_open<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.time_open<sp/>=<sp/>Order::OrderOpenTime();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.time_open;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>close<sp/>time<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/orderclosetime</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>datetime<sp/>OrderCloseTime()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderCloseTime();</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@docs<sp/>https://www.mql5.com/en/docs/trading/historydealgetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ENUM_DEAL_ENTRY<sp/>_deal_entry<sp/>=<sp/>(ENUM_DEAL_ENTRY)HistoryDealGetInteger(_deal_ticket,<sp/>DEAL_ENTRY);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_deal_entry<sp/>==<sp/>DEAL_ENTRY_OUT<sp/>||<sp/>_deal_entry<sp/>==<sp/>DEAL_ENTRY_OUT_BY)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>HistoryDealGetInteger(_deal_ticket,<sp/>DEAL_TIME);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(datetime)_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>datetime<sp/>GetCloseTime()<sp/>{<sp/>return<sp/>IsClosed()<sp/>?<sp/>odata.time_close<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>comment<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/ordercomment</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>OrderComment()<sp/>{<sp/>return<sp/>Order::OrderGetString(ORDER_COMMENT);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>GetComment()<sp/>{<sp/>return<sp/>odata.comment;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>calculated<sp/>commission<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderCommission()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>https://docs.mql4.com/trading/ordercommission</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderCommission();</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>_deal_ticket<sp/>&gt;<sp/>0<sp/>?<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_COMMISSION)<sp/>:<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetCommission()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.commission<sp/>=<sp/>IsSelected()<sp/>?<sp/>Order::OrderCommission()<sp/>:<sp/>odata.commission;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.commission;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>total<sp/>fees<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderTotalFees()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderCommission()<sp/>-<sp/>Order::OrderSwap();</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_deal_ticket<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_COMMISSION);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_FEE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_SWAP);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetTotalFees()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!IsClosed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.total_fees<sp/>=<sp/>Order::OrderTotalFees();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.total_fees;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>expiration<sp/>date<sp/>of<sp/>the<sp/>selected<sp/>pending<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/orderexpiration</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>datetime<sp/>OrderExpiration()<sp/>{<sp/>return<sp/>(datetime)Order::OrderGetInteger(ORDER_TIME_EXPIRATION);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>datetime<sp/>GetExpiration()<sp/>{<sp/>return<sp/>odata.expiration;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>amount<sp/>of<sp/>lots<sp/>of<sp/>the<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/orderlots</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetdouble</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderLots()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderLots();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@fixme:<sp/>It<sp/>returns<sp/>0.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@fixme:<sp/>Error<sp/>69639.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderGetDouble(ORDER_VOLUME_CURRENT);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetVolume()<sp/>{<sp/>return<sp/>orequest.volume;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>an<sp/>identifying<sp/>(magic)<sp/>number<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>http://docs.mql4.com/trading/ordermagicnumber</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>long<sp/>OrderMagicNumber()<sp/>{<sp/>return<sp/>Order::OrderGetInteger(ORDER_MAGIC);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>long<sp/>GetMagicNumber()<sp/>{<sp/>return<sp/>orequest.magic;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>open<sp/>price<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>http://docs.mql4.com/trading/orderopenprice</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderOpenPrice()<sp/>{<sp/>return<sp/>Order::OrderGetDouble(ORDER_PRICE_OPEN);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetOpenPrice()<sp/>{<sp/>return<sp/>odata.price_open;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>profit<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>net<sp/>profit<sp/>value<sp/>(without<sp/>swaps<sp/>or<sp/>commissions)<sp/>for<sp/>the<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>For<sp/>open<sp/>orders,<sp/>it<sp/>is<sp/>the<sp/>current<sp/>unrealized<sp/>profit.<sp/>For<sp/>closed<sp/>orders,<sp/>it<sp/>is<sp/>the<sp/>fixed<sp/>profit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>https://docs.mql4.com/trading/orderprofit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderProfit()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>https://docs.mql4.com/trading/orderprofit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderProfit();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>_deal_ticket<sp/>&gt;<sp/>0<sp/>?<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_PROFIT)<sp/>:<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetProfit()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Update(ORDER_PRICE_CURRENT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.profit;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>stop<sp/>loss<sp/>value<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/trading/orderstoploss</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderStopLoss()<sp/>{<sp/>return<sp/>Order::OrderGetDouble(ORDER_SL);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetStopLoss(bool<sp/>_refresh<sp/>=<sp/>true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_osl_last_update<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_refresh<sp/>&amp;&amp;<sp/>_osl_last_update<sp/>&lt;<sp/>TimeCurrent())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_SL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_osl_last_update<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.sl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>take<sp/>profit<sp/>value<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>take<sp/>profit<sp/>value<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/ordertakeprofit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderTakeProfit()<sp/>{<sp/>return<sp/>Order::OrderGetDouble(ORDER_TP);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetTakeProfit(bool<sp/>_refresh<sp/>=<sp/>true)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_osl_last_update<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_refresh<sp/>&amp;&amp;<sp/>_osl_last_update<sp/>&lt;<sp/>TimeCurrent())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_TP);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_osl_last_update<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.tp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>SL/TP<sp/>value<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetOrderSLTP(ENUM_ORDER_PROPERTY_DOUBLE<sp/>_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderStopLoss();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderTakeProfit();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>cumulative<sp/>swap<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderSwap()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>https://docs.mql4.com/trading/orderswap</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderSwap();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>Order::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(HistorySelectByPosition(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>HistoryDealsTotal()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>https://www.mql5.com/en/docs/trading/historydealgetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>long<sp/>_deal_ticket<sp/>=<sp/>HistoryDealGetTicket(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>+=<sp/>_deal_ticket<sp/>&gt;<sp/>0<sp/>?<sp/>HistoryDealGetDouble(_deal_ticket,<sp/>DEAL_SWAP)<sp/>:<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetSwap()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!IsClosed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.swap<sp/>=<sp/>Order::OrderSwap();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.swap;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>symbol<sp/>name<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/ordersymbol</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/positiongetstring</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>OrderSymbol()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderSymbol();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderGetString(ORDER_SYMBOL);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>GetSymbol()<sp/>{<sp/>return<sp/>orequest.symbol;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>a<sp/>ticket<sp/>number<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>a<sp/>unique<sp/>number<sp/>assigned<sp/>to<sp/>each<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>https://docs.mql4.com/trading/orderticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>https://www.mql5.com/en/docs/trading/ordergetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>long<sp/>OrderTicket()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>selected_ticket_id;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>long<sp/>GetTicket()<sp/>const<sp/>{<sp/>return<sp/>odata.ticket;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>order<sp/>operation<sp/>type<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/trading/ordertype</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE<sp/>OrderType()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(ENUM_ORDER_TYPE)::OrderType();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(ENUM_ORDER_TYPE)Order::OrderGetInteger(ORDER_TYPE);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ENUM_ORDER_TYPE<sp/>GetType()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.type<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>Select())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_TYPE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.type;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>order<sp/>operation<sp/>type<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Limit<sp/>and<sp/>stop<sp/>orders<sp/>are<sp/>on<sp/>a<sp/>GTC<sp/>basis<sp/>unless<sp/>an<sp/>expiry<sp/>time<sp/>is<sp/>set<sp/>explicitly.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE_TIME<sp/>OrderTypeTime()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">//<sp/>MT4<sp/>orders<sp/>are<sp/>usually<sp/>on<sp/>an<sp/>FOK<sp/>basis<sp/>in<sp/>that<sp/>you<sp/>get<sp/>a<sp/>complete<sp/>fill<sp/>or<sp/>nothing.</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ORDER_TIME_GTC;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(ENUM_ORDER_TYPE_TIME)Order::OrderGetInteger(ORDER_TYPE_TIME);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>order<sp/>position<sp/>based<sp/>on<sp/>the<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>set<sp/>to<sp/>an<sp/>order<sp/>as<sp/>soon<sp/>as<sp/>it<sp/>is<sp/>executed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Each<sp/>executed<sp/>order<sp/>results<sp/>in<sp/>a<sp/>deal<sp/>that<sp/>opens<sp/>or<sp/>modifies<sp/>an<sp/>already<sp/>existing<sp/>position.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>The<sp/>identifier<sp/>of<sp/>exactly<sp/>this<sp/>position<sp/>is<sp/>set<sp/>to<sp/>the<sp/>executed<sp/>order<sp/>at<sp/>this<sp/>moment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>long<sp/>OrderGetPositionID()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket<sp/>=<sp/>::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>_pos<sp/>=<sp/>0;<sp/>_pos<sp/>&lt;<sp/>OrdersTotal();<sp/>_pos++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_pos,<sp/>SELECT_BY_POS,<sp/>MODE_TRADES)<sp/>&amp;&amp;<sp/>::OrderTicket()<sp/>==<sp/>_ticket)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_pos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderGetInteger(ORDER_POSITION_ID);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>long<sp/>GetPositionID()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.position_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_POSITION_ID);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.position_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>ticket<sp/>of<sp/>an<sp/>opposite<sp/>position.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Used<sp/>when<sp/>a<sp/>position<sp/>is<sp/>closed<sp/>by<sp/>an<sp/>opposite<sp/>one<sp/>open<sp/>for<sp/>the<sp/>same<sp/>symbol<sp/>in<sp/>the<sp/>opposite<sp/>direction.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/structures/mqltraderequest</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>unsigned<sp/>long<sp/>OrderGetPositionBy()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>_pos<sp/>=<sp/>0;<sp/>_pos<sp/>&lt;<sp/>OrdersTotal();<sp/>_pos++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(OrderSelect(_pos,<sp/>SELECT_BY_POS,<sp/>MODE_TRADES)<sp/>&amp;&amp;<sp/>OrderTicket()<sp/>==<sp/>_ticket)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_pos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderGetInteger(ORDER_POSITION_BY_ID);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>long<sp/>GetOrderPositionBy()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_BY_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.position_by_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrderSelect();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_POSITION_BY_ID);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.position_by_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>ticket<sp/>of<sp/>a<sp/>position<sp/>in<sp/>the<sp/>list<sp/>of<sp/>open<sp/>positions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>https://www.mql5.com/en/docs/trading/positiongetticket</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unsigned<sp/>long<sp/>PositionGetTicket(int<sp/>_index)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_index,<sp/>SELECT_BY_POS,<sp/>MODE_TRADES))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal">#else<sp/><sp/>//<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::PositionGetTicket(_index);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Order<sp/>manipulation<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Closes<sp/>opened<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://docs.mql4.com/trading/orderclose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/enum_trade_request_actions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>if<sp/>successful,<sp/>otherwise<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>To<sp/>get<sp/>details<sp/>about<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderClose(unsigned<sp/>long<sp/>_ticket,<sp/><sp/>//<sp/>Unique<sp/>number<sp/>of<sp/>the<sp/>order<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_lots,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Number<sp/>of<sp/>lots.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_price,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Closing<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_deviation,<sp/><sp/>//<sp/>Maximal<sp/>possible<sp/>deviation/slippage<sp/>from<sp/>the<sp/>requested<sp/>price<sp/>(in<sp/>points).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>_arrow_color<sp/>=<sp/>CLR_NONE<sp/><sp/>//<sp/>Color<sp/>of<sp/>the<sp/>closing<sp/>arrow<sp/>on<sp/>the<sp/>chart.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderClose((int)_ticket,<sp/>_lots,<sp/>_price,<sp/>_deviation,<sp/>_arrow_color);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_ticket)<sp/>||<sp/>::PositionSelectByTicket(_ticket)<sp/>||<sp/>::HistoryOrderSelect(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeCheckResult<sp/>_result_check<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_DEAL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.position<sp/>=<sp/>::PositionGetInteger(POSITION_TICKET);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.symbol<sp/>=<sp/>::PositionGetString(POSITION_SYMBOL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.type<sp/>=<sp/>NegateOrderType((ENUM_POSITION_TYPE)::PositionGetInteger(POSITION_TYPE));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.volume<sp/>=<sp/>_lots;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.price<sp/>=<sp/>_price;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.deviation<sp/>=<sp/>_deviation;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSend(_request,<sp/>_result,<sp/>_result_check,<sp/>_arrow_color);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderClose(string<sp/>_comment<sp/>=<sp/>&quot;&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderSelect())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!OrderSelectHistory())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.ProcessLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_DEAL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.comment<sp/>=<sp/>_comment;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.deviation<sp/>=<sp/>orequest.deviation;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.type<sp/>=<sp/>NegateOrderType(orequest.type);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.position<sp/>=<sp/>oresult.deal;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.price<sp/>=<sp/>SymbolInfo::GetCloseOffer(orequest.type);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.symbol<sp/>=<sp/>orequest.symbol;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.volume<sp/>=<sp/>orequest.volume;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Order::OrderSend(_request,<sp/>oresult,<sp/>oresult_check);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(oresult.retcode<sp/>==<sp/>TRADE_RETCODE_DONE)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTimeClose(DateTime::TimeTradeServer());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>For<sp/>now,<sp/>sets<sp/>the<sp/>current<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetPriceClose(SymbolInfo::GetCloseOffer(odata.type));<sp/><sp/>//<sp/>For<sp/>now,<sp/>sets<sp/>using<sp/>the<sp/>actual<sp/>close<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetLastError(ERR_NO_ERROR);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.last_error<sp/>=<sp/>oresult.retcode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(OrderSelect())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(IsClosed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Closes<sp/>a<sp/>position<sp/>by<sp/>an<sp/>opposite<sp/>one.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderCloseBy(long<sp/>_ticket,<sp/>long<sp/>_opposite,<sp/>color<sp/>_color)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderCloseBy((int)_ticket,<sp/>(int)_opposite,<sp/>_color);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_ticket)<sp/>||<sp/>::PositionSelectByTicket(_ticket)<sp/>||<sp/>::HistoryOrderSelect(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeCheckResult<sp/>_result_check<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_CLOSE_BY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.position<sp/>=<sp/>::PositionGetInteger(POSITION_TICKET);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.position_by<sp/>=<sp/>_opposite;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.symbol<sp/>=<sp/>::PositionGetString(POSITION_SYMBOL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.type<sp/>=<sp/>NegateOrderType((ENUM_POSITION_TYPE)::PositionGetInteger(POSITION_TYPE));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.volume<sp/>=<sp/>::PositionGetDouble(POSITION_VOLUME);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSend(_request,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Deletes<sp/>previously<sp/>opened<sp/>pending<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see:<sp/>https://docs.mql4.com/trading/orderdelete</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderDelete(unsigned<sp/>long<sp/>_ticket,<sp/>color<sp/>_color<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderDelete((int)_ticket,<sp/>_color);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_REMOVE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_request.order<sp/>=<sp/>_ticket;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSend(_request,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderDelete()<sp/>{<sp/>return<sp/>Order::OrderDelete(GetTicket());<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Modification<sp/>of<sp/>characteristics<sp/>of<sp/>the<sp/>previously<sp/>opened<sp/>or<sp/>pending<sp/>orders.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/trading/ordermodify</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderModify(unsigned<sp/>long<sp/>_ticket,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Ticket<sp/>of<sp/>the<sp/>position.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_price,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_stoploss,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Stop<sp/>loss.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_takeprofit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Take<sp/>profit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datetime<sp/>_expiration,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Expiration.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>_arrow_color<sp/>=<sp/>clrNONE<sp/><sp/>//<sp/>Color<sp/>of<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderModify((unsigned<sp/>int)_ticket,<sp/>_price,<sp/>_stoploss,<sp/>_takeprofit,<sp/>_expiration,<sp/>_arrow_color);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!::PositionSelectByTicket(_ticket))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_SLTP;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//_request.type<sp/>=<sp/>PositionTypeToOrderType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.position<sp/>=<sp/>_ticket;<sp/><sp/>//<sp/>Position<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.symbol<sp/>=<sp/>::PositionGetString(POSITION_SYMBOL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.sl<sp/>=<sp/>_stoploss;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.tp<sp/>=<sp/>_takeprofit;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.expiration<sp/>=<sp/>_expiration;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSend(_request,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderModify(double<sp/>_sl,<sp/>double<sp/>_tp,<sp/>double<sp/>_price<sp/>=<sp/>0,<sp/>datetime<sp/>_expiration<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.time_close<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Ignore<sp/>change<sp/>for<sp/>already<sp/>closed<sp/>orders.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(_sl<sp/>==<sp/>odata.sl<sp/>&amp;&amp;<sp/>_tp<sp/>==<sp/>odata.tp<sp/>&amp;&amp;<sp/>_expiration<sp/>==<sp/>odata.expiration)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Ignore<sp/>change<sp/>for<sp/>the<sp/>same<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>Order::OrderModify(odata.ticket,<sp/>_price,<sp/>_sl,<sp/>_tp,<sp/>_expiration);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_result<sp/>&amp;&amp;<sp/>OrderSelect())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Updating<sp/>expected<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetStopLoss(_sl);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetProfitTake(_tp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Add<sp/>if<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update(ORDER_PRICE_OPEN);<sp/>//<sp/>For<sp/>pending<sp/>order<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update(ORDER_TIME_EXPIRATION);<sp/>//<sp/>For<sp/>pending<sp/>order<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(OrderSelect())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(IsClosed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Warning(StringFormat(&quot;Warning:<sp/>%d!<sp/>Failed<sp/>to<sp/>modify<sp/>order<sp/>(#%d/p:%g/sl:%g/tp:%g).&quot;,<sp/>_last_error,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.ticket,<sp/>_price,<sp/>_sl,<sp/>_tp),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION_LINE__,<sp/>ToCSV());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_SL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update(ORDER_TP);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TODO:<sp/>Update(ORDER_PRI)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>Add<sp/>if<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update(ORDER_PRICE_OPEN);<sp/>//<sp/>For<sp/>pending<sp/>order<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update(ORDER_TIME_EXPIRATION);<sp/>//<sp/>For<sp/>pending<sp/>order<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Error:<sp/>%d!<sp/>Failed<sp/>to<sp/>modify<sp/>non-existing<sp/>order<sp/>(#%d/p:%g/sl:%g/tp:%g).&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_last_error,<sp/>odata.ticket,<sp/>_price,<sp/>_sl,<sp/>_tp),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION_LINE__,<sp/>ToCSV());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Executes<sp/>trade<sp/>operations<sp/>by<sp/>sending<sp/>the<sp/>request<sp/>to<sp/>a<sp/>trade<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>The<sp/>main<sp/>function<sp/>used<sp/>to<sp/>open<sp/>market<sp/>or<sp/>place<sp/>a<sp/>pending<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>http://docs.mql4.com/trading/ordersend</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordersend</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>number<sp/>of<sp/>the<sp/>ticket<sp/>assigned<sp/>to<sp/>the<sp/>order<sp/>by<sp/>the<sp/>trade<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>or<sp/>-1<sp/>if<sp/>it<sp/>fails.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>long<sp/>OrderSend(string<sp/>_symbol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_cmd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_volume,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Volume.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_price,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_deviation,<sp/><sp/><sp/><sp/><sp/>//<sp/>Deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_stoploss,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Stop<sp/>loss.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>_takeprofit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Take<sp/>profit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>_comment<sp/>=<sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Comment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_magic<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/>//<sp/>Magic<sp/>number.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datetime<sp/>_expiration<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/>//<sp/>Pending<sp/>order<sp/>expiration.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>_arrow_color<sp/>=<sp/>clrNONE<sp/><sp/>//<sp/>Color.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderSend(_symbol,<sp/>_cmd,<sp/>_volume,<sp/>_price,<sp/>(int)_deviation,<sp/>_stoploss,<sp/>_takeprofit,<sp/>_comment,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)_magic,<sp/>_expiration,<sp/>_arrow_color);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/articles/211</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/enum_trade_request_actions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeRequest<sp/>_request<sp/>=<sp/>{0};<sp/><sp/>//<sp/>Query<sp/>structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeResult<sp/>_result<sp/>=<sp/>{0};<sp/><sp/><sp/><sp/>//<sp/>Structure<sp/>of<sp/>the<sp/>result.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.action<sp/>=<sp/>TRADE_ACTION_DEAL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.symbol<sp/>=<sp/>_symbol;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.volume<sp/>=<sp/>_volume;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.price<sp/>=<sp/>_price;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.sl<sp/>=<sp/>_stoploss;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.tp<sp/>=<sp/>_takeprofit;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.deviation<sp/>=<sp/>_deviation;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.comment<sp/>=<sp/>_comment;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.magic<sp/>=<sp/>_magic;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.expiration<sp/>=<sp/>_expiration;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.type<sp/>=<sp/>(ENUM_ORDER_TYPE)_cmd;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_request.type_filling<sp/>=<sp/>_request.type_filling<sp/>?<sp/>_request.type_filling<sp/>:<sp/>GetOrderFilling(_symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!Order::OrderSend(_request,<sp/>_result))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(long)_result.order;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderSend(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>MqlTradeResult<sp/>&amp;_result,<sp/>MqlTradeCheckResult<sp/>&amp;_check_result,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>_color<sp/>=<sp/>clrNONE)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Convert<sp/>Trade<sp/>Request<sp/>Structure<sp/>to<sp/>function<sp/>parameters.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>TRADE_RETCODE_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_request.position<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_request.action<sp/>==<sp/>TRADE_ACTION_SLTP)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Order::OrderModify(_request.position,<sp/>_request.price,<sp/>_request.sl,<sp/>_request.tp,<sp/>_request.expiration,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_color))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/structures/mqltraderesult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.ask<sp/>=<sp/>SymbolInfo::GetAsk(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Bid<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.bid<sp/>=<sp/>SymbolInfo::GetBid(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Ask<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.order<sp/>=<sp/>_request.position;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.price<sp/>=<sp/>_request.price;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>price,<sp/>confirmed<sp/>by<sp/>broker.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.volume<sp/>=<sp/>_request.volume;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>volume,<sp/>confirmed<sp/>by<sp/>broker<sp/>(@fixme?).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>TRADE_RETCODE_DONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//_result.comment<sp/>=<sp/>TODO;<sp/>//<sp/>The<sp/>broker<sp/>comment<sp/>to<sp/>operation<sp/>(by<sp/>default<sp/>it<sp/>is<sp/>filled<sp/>by<sp/>description<sp/>of<sp/>trade</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>server<sp/>return<sp/>code).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(_request.action<sp/>==<sp/>TRADE_ACTION_CLOSE_BY)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Order::OrderCloseBy(_request.position,<sp/>_request.position_by,<sp/>_color))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/structures/mqltraderesult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.ask<sp/>=<sp/>SymbolInfo::GetAsk(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Bid<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.bid<sp/>=<sp/>SymbolInfo::GetBid(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Ask<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>TRADE_RETCODE_DONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(_request.action<sp/>==<sp/>TRADE_ACTION_DEAL<sp/>||<sp/>_request.action<sp/>==<sp/>TRADE_ACTION_REMOVE)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://docs.mql4.com/trading/orderclose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Order::OrderClose(_request.position,<sp/>_request.volume,<sp/>_request.price,<sp/>(int)_request.deviation,<sp/>_color))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/structures/mqltraderesult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.ask<sp/>=<sp/>SymbolInfo::GetAsk(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Bid<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.bid<sp/>=<sp/>SymbolInfo::GetBid(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Ask<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.order<sp/>=<sp/>_request.position;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.price<sp/>=<sp/>_request.price;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>price,<sp/>confirmed<sp/>by<sp/>broker.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.volume<sp/>=<sp/>_request.volume;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>volume,<sp/>confirmed<sp/>by<sp/>broker<sp/>(@fixme?).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>TRADE_RETCODE_DONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//_result.comment<sp/>=<sp/>TODO;<sp/>//<sp/>The<sp/>broker<sp/>comment<sp/>to<sp/>operation<sp/>(by<sp/>default<sp/>it<sp/>is<sp/>filled<sp/>by<sp/>description<sp/>of<sp/>trade</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>server<sp/>return<sp/>code).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(_request.action<sp/>==<sp/>TRADE_ACTION_DEAL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://docs.mql4.com/trading/ordersend</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result.order<sp/>=<sp/>Order::OrderSend(_request.symbol,<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.volume,<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Volume.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.price,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.deviation,<sp/><sp/><sp/>//<sp/>Deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.sl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Stop<sp/>loss.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.tp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Take<sp/>profit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.comment,<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.magic,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Magic<sp/>number.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_request.expiration,<sp/><sp/>//<sp/>Pending<sp/>order<sp/>expiration.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_color<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Color.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>_result.order<sp/>&gt;<sp/>0<sp/>?<sp/>TRADE_RETCODE_DONE<sp/>:<sp/>GetLastError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_request.order<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/structures/mqltraderesult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.ask<sp/>=<sp/>SymbolInfo::GetAsk(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Bid<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.bid<sp/>=<sp/>SymbolInfo::GetBid(_request.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Ask<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.price<sp/>=<sp/>_request.price;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>price,<sp/>confirmed<sp/>by<sp/>broker.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result.volume<sp/>=<sp/>_request.volume;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>volume,<sp/>confirmed<sp/>by<sp/>broker<sp/>(@fixme?).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//_result.comment<sp/>=<sp/>TODO;<sp/>//<sp/>The<sp/>broker<sp/>comment<sp/>to<sp/>operation<sp/>(by<sp/>default<sp/>it<sp/>is<sp/>filled<sp/>by<sp/>description<sp/>of<sp/>trade</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>server<sp/>return<sp/>code).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result.retcode<sp/>==<sp/>TRADE_RETCODE_DONE;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>trade<sp/>requests<sp/>go<sp/>through<sp/>several<sp/>stages<sp/>of<sp/>checking<sp/>on<sp/>a<sp/>trade<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>First<sp/>of<sp/>all,<sp/>it<sp/>checks<sp/>if<sp/>all<sp/>the<sp/>required<sp/>fields<sp/>of<sp/>the<sp/>request<sp/>parameter<sp/>are<sp/>filled<sp/>out<sp/>correctly.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderCheck(_request,<sp/>_check_result))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>funds<sp/>are<sp/>not<sp/>enough<sp/>for<sp/>the<sp/>operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>or<sp/>parameters<sp/>are<sp/>filled<sp/>out<sp/>incorrectly,<sp/>the<sp/>function<sp/>returns<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordercheck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/constants/structures/mqltradecheckresult</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;%s:<sp/>Error<sp/>%d:<sp/>%s&quot;,<sp/>__FUNCTION_LINE__,<sp/>_check_result.retcode,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminal::GetErrorText(_check_result.retcode));</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result.retcode<sp/>=<sp/>_check_result.retcode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>case<sp/>of<sp/>a<sp/>successful<sp/>basic<sp/>check<sp/>of<sp/>structures<sp/>(index<sp/>checking)<sp/>returns<sp/>true.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>However,<sp/>this<sp/>is<sp/>not<sp/>a<sp/>sign<sp/>of<sp/>successful<sp/>execution<sp/>of<sp/>a<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>errors,<sp/>the<sp/>server<sp/>accepts<sp/>the<sp/>order<sp/>for<sp/>further<sp/>processing.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>check<sp/>results<sp/>are<sp/>placed<sp/>to<sp/>the<sp/>fields<sp/>of<sp/>the<sp/>MqlTradeCheckResult<sp/>structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>For<sp/>a<sp/>more<sp/>detailed<sp/>description<sp/>of<sp/>the<sp/>function<sp/>execution<sp/>result,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>analyze<sp/>the<sp/>fields<sp/>of<sp/>the<sp/>result<sp/>structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>--</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordersend</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>--</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Sends<sp/>trade<sp/>requests<sp/>to<sp/>a<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderSend(_request,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>function<sp/>execution<sp/>result<sp/>is<sp/>placed<sp/>to<sp/>structure<sp/>MqlTradeResult,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>whose<sp/>retcode<sp/>field<sp/>contains<sp/>the<sp/>trade<sp/>server<sp/>return<sp/>code.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderSend(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>MqlTradeResult<sp/>&amp;_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlTradeCheckResult<sp/>_check_result<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSend(_request,<sp/>_result,<sp/>_check_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>OrderSend()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_result<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderSend(orequest.symbol,<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.volume,<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Volume.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.price,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.deviation,<sp/><sp/><sp/>//<sp/>Deviation<sp/>(in<sp/>pts).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.sl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Stop<sp/>loss.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.tp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Take<sp/>profit.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.comment,<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.magic,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Magic<sp/>number.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orequest.expiration,<sp/><sp/>//<sp/>Pending<sp/>order<sp/>expiration.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oparams.color_arrow<sp/><sp/><sp/>//<sp/>Color.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.retcode<sp/>=<sp/>_result<sp/>==<sp/>-1<sp/>?<sp/>TRADE_RETCODE_ERROR<sp/>:<sp/>TRADE_RETCODE_DONE;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orequest.type_filling<sp/>=<sp/>orequest.type_filling<sp/>?<sp/>orequest.type_filling<sp/>:<sp/>GetOrderFilling(orequest.symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>trade<sp/>requests<sp/>go<sp/>through<sp/>several<sp/>stages<sp/>of<sp/>checking<sp/>on<sp/>a<sp/>trade<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>First<sp/>of<sp/>all,<sp/>it<sp/>checks<sp/>if<sp/>all<sp/>the<sp/>required<sp/>fields<sp/>of<sp/>the<sp/>request<sp/>parameter<sp/>are<sp/>filled<sp/>out<sp/>correctly.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderCheck(orequest,<sp/>oresult_check))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>funds<sp/>are<sp/>not<sp/>enough<sp/>for<sp/>the<sp/>operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>or<sp/>parameters<sp/>are<sp/>filled<sp/>out<sp/>incorrectly,<sp/>the<sp/>function<sp/>returns<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/trading/ordercheck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.last_error<sp/>=<sp/>oresult_check.retcode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>errors,<sp/>the<sp/>server<sp/>accepts<sp/>the<sp/>order<sp/>for<sp/>further<sp/>processing.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>check<sp/>results<sp/>are<sp/>placed<sp/>to<sp/>the<sp/>fields<sp/>of<sp/>the<sp/>MqlTradeCheckResult<sp/>structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>For<sp/>a<sp/>more<sp/>detailed<sp/>description<sp/>of<sp/>the<sp/>function<sp/>execution<sp/>result,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>analyze<sp/>the<sp/>fields<sp/>of<sp/>the<sp/>result<sp/>structure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Sends<sp/>trade<sp/>requests<sp/>to<sp/>a<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(::OrderSend(orequest,<sp/>oresult))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>case<sp/>of<sp/>a<sp/>successful<sp/>basic<sp/>check<sp/>of<sp/>structures<sp/>(index<sp/>checking)<sp/>returns<sp/>true.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>However,<sp/>this<sp/>is<sp/>not<sp/>a<sp/>sign<sp/>of<sp/>successful<sp/>execution<sp/>of<sp/>a<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/trading/ordersend</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.ticket<sp/>=<sp/>oresult.order;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>(long)oresult.order;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>function<sp/>execution<sp/>result<sp/>is<sp/>placed<sp/>to<sp/>structure<sp/>MqlTradeResult,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>whose<sp/>retcode<sp/>field<sp/>contains<sp/>the<sp/>trade<sp/>server<sp/>return<sp/>code.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@see:<sp/>https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>obtain<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>call<sp/>the<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.last_error<sp/>=<sp/>oresult.retcode;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_result<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>MQL4<sp/>there<sp/>is<sp/>no<sp/>difference<sp/>in<sp/>selecting<sp/>various<sp/>types<sp/>of<sp/>tickets.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oresult.deal<sp/>=<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oresult.order<sp/>=<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>order<sp/>data<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.ticket<sp/>=<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.symbol<sp/>=<sp/>orequest.symbol;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.type<sp/>=<sp/>orequest.type;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.volume<sp/>=<sp/>orequest.volume;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.price_open<sp/>=<sp/>orequest.price;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.sl<sp/>=<sp/>orequest.sl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.tp<sp/>=<sp/>orequest.tp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.comment<sp/>=<sp/>orequest.comment;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.magic<sp/>=<sp/>orequest.magic;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.expiration<sp/>=<sp/>orequest.expiration;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Executes<sp/>dummy<sp/>trade<sp/>operation<sp/>by<sp/>sending<sp/>the<sp/>fake<sp/>request.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>number<sp/>of<sp/>the<sp/>fake<sp/>ticket<sp/>assigned<sp/>to<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>OrderSendDummy()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orequest.type_filling<sp/>=<sp/>orequest.type_filling<sp/>?<sp/>orequest.type_filling<sp/>:<sp/>GetOrderFilling(orequest.symbol);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderCheckDummy(orequest,<sp/>oresult_check))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>funds<sp/>are<sp/>not<sp/>enough<sp/>for<sp/>the<sp/>operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>or<sp/>parameters<sp/>are<sp/>filled<sp/>out<sp/>incorrectly,<sp/>the<sp/>function<sp/>returns<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.last_error<sp/>=<sp/>oresult_check.retcode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Process<sp/>dummy<sp/>request.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.ask<sp/>=<sp/>SymbolInfo::GetAsk(orequest.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Bid<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.bid<sp/>=<sp/>SymbolInfo::GetBid(orequest.symbol);<sp/><sp/>//<sp/>The<sp/>current<sp/>market<sp/>Ask<sp/>price<sp/>(requote<sp/>price).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.order<sp/>=<sp/>orequest.position;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.price<sp/>=<sp/>orequest.price;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>price,<sp/>confirmed<sp/>by<sp/>broker.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.volume<sp/>=<sp/>orequest.volume;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Deal<sp/>volume,<sp/>confirmed<sp/>by<sp/>broker<sp/>(@fixme?).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.retcode<sp/>=<sp/>TRADE_RETCODE_DONE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Mark<sp/>trade<sp/>operation<sp/>as<sp/>done.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.comment<sp/>=<sp/>orequest.comment;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>comment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>oresult.order<sp/>=<sp/>rand();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Assign<sp/>the<sp/>random<sp/>number<sp/>(0-32767).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ticket<sp/>=<sp/>oresult.order;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDummy();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.last_error<sp/>=<sp/>oresult.retcode;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(long)oresult.order;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Checks<sp/>if<sp/>there<sp/>are<sp/>enough<sp/>money<sp/>to<sp/>execute<sp/>a<sp/>required<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>_request<sp/>MqlTradeRequest</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>MqlTradeRequest<sp/>type,<sp/>which<sp/>describes<sp/>the<sp/>required<sp/>trade<sp/>action.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>_result_check<sp/>MqlTradeCheckResult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>MqlTradeCheckResult<sp/>type,<sp/>to<sp/>which<sp/>the<sp/>check<sp/>result<sp/>will<sp/>be<sp/>placed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>funds<sp/>are<sp/>not<sp/>enough<sp/>for<sp/>the<sp/>operation,<sp/>or<sp/>parameters<sp/>are<sp/>filled<sp/>out<sp/>incorrectly,<sp/>the<sp/>function<sp/>returns<sp/>false.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>successful<sp/>basic<sp/>check<sp/>of<sp/>structures<sp/>(check<sp/>of<sp/>pointers),<sp/>it<sp/>returns<sp/>true.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs<sp/>https://www.mql5.com/en/docs/trading/ordercheck</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderCheck(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>MqlTradeCheckResult<sp/>&amp;_result_check)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderCheckDummy(_request,<sp/>_result_check);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderCheck(_request,<sp/>_result_check);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderCheckDummy(const<sp/>MqlTradeRequest<sp/>&amp;_request,<sp/>MqlTradeCheckResult<sp/>&amp;_result_check)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_result_check.retcode<sp/>=<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_request.volume<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result_check.retcode<sp/>=<sp/>TRADE_RETCODE_INVALID_VOLUME;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_request.price<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result_check.retcode<sp/>=<sp/>TRADE_RETCODE_INVALID_PRICE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>_result_check.balance<sp/>=<sp/>Account::Balance()<sp/>-<sp/>something;<sp/>//<sp/>Balance<sp/>value<sp/>that<sp/>will<sp/>be<sp/>after<sp/>the<sp/>execution<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>trade<sp/>operation.<sp/>equity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Equity<sp/>value<sp/>that<sp/>will<sp/>be<sp/>after<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>profit;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Value<sp/>of<sp/>the<sp/>floating<sp/>profit<sp/>that<sp/>will<sp/>be<sp/>after<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>margin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Margin<sp/>required<sp/>for<sp/>the<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>margin_free;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Free<sp/>margin<sp/>that<sp/>will<sp/>be<sp/>left<sp/>after<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>margin_level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Margin<sp/>level<sp/>that<sp/>will<sp/>be<sp/>set<sp/>after<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>trade<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>comment;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Comment<sp/>to<sp/>the<sp/>reply<sp/>code<sp/>(description<sp/>of<sp/>the<sp/>error).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_result_check.retcode<sp/>!=<sp/>ERR_NO_ERROR)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>SetUserError(???);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result_check.retcode<sp/>==<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Order<sp/>selection<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Select<sp/>an<sp/>order<sp/>to<sp/>work<sp/>with.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>The<sp/>function<sp/>selects<sp/>an<sp/>order<sp/>for<sp/>further<sp/>processing.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>http://docs.mql4.com/trading/orderselect</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderSelect(unsigned<sp/>long<sp/>_index,<sp/>int<sp/>select,<sp/>int<sp/>pool<sp/>=<sp/>MODE_TRADES)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::OrderSelect((int)_index,<sp/>select,<sp/>pool);</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(select<sp/>==<sp/>SELECT_BY_POS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pool<sp/>==<sp/>MODE_TRADES)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::PositionGetTicket((int)_index))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_POSITION;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(::OrderGetTicket((int)_index))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_ACTIVE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_NONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_id<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(pool<sp/>==<sp/>MODE_HISTORY)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>HistoryOrderGetTicket(_index)<sp/>return<sp/>the<sp/>ticket<sp/>of<sp/>the<sp/>historical<sp/>order,<sp/>by<sp/>its<sp/>_index<sp/>from<sp/>the<sp/>cache<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>historical<sp/>orders<sp/>(not<sp/>from<sp/>the<sp/>terminal<sp/>base!).<sp/>The<sp/>obtained<sp/>ticket<sp/>can<sp/>be<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>HistoryOrderSelect(ticket)<sp/>function,<sp/>which<sp/>clears<sp/>the<sp/>cache<sp/>and<sp/>re-fill<sp/>it<sp/>with<sp/>only<sp/>one<sp/>order,<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>case<sp/>of<sp/>success.<sp/>Recall<sp/>that<sp/>the<sp/>value,<sp/>returned<sp/>from<sp/>HistoryOrdersTotal()<sp/>depends<sp/>on<sp/>the<sp/>number<sp/>of<sp/>orders</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>in<sp/>the<sp/>cache.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>_ticket_id<sp/>=<sp/>HistoryOrderGetTicket((int)_index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_ticket_id<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_HISTORY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(::HistoryOrderSelect(_ticket_id))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_HISTORY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_NONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_id<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_id<sp/>=<sp/>selected_ticket_type<sp/>==<sp/>ORDER_SELECT_TYPE_NONE<sp/>?<sp/>0<sp/>:<sp/>_ticket_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(select<sp/>==<sp/>SELECT_BY_TICKET)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::OrderSelect(_index)<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_ACTIVE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::PositionSelectByTicket(_index)<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_POSITION;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::HistoryOrderSelect(_index)<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_HISTORY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::HistoryDealSelect(_index)<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_DEAL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_NONE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_id<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selected_ticket_id<sp/>=<sp/>selected_ticket_type<sp/>==<sp/>ORDER_SELECT_TYPE_NONE<sp/>?<sp/>0<sp/>:<sp/>_index;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintFormat(&quot;%s:<sp/>Possible<sp/>values<sp/>for<sp/>&apos;select&apos;<sp/>parameters<sp/>are:<sp/>SELECT_BY_POS<sp/>or<sp/>SELECT_BY_HISTORY.&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION_LINE__);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>selected_ticket_type<sp/>!=<sp/>ORDER_SELECT_TYPE_NONE;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Tries<sp/>to<sp/>select<sp/>an<sp/>order<sp/>to<sp/>work<sp/>with.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>The<sp/>function<sp/>selects<sp/>an<sp/>order<sp/>for<sp/>further<sp/>processing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Same<sp/>as<sp/>OrderSelect(),<sp/>it<sp/>will<sp/>just<sp/>perform<sp/>ResetLastError().</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/trading/orderselect</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>TryOrderSelect(unsigned<sp/>long<sp/>_index,<sp/>int<sp/>select,<sp/>int<sp/>pool<sp/>=<sp/>MODE_TRADES)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>result<sp/>=<sp/>OrderSelect(_index,<sp/>select,<sp/>pool);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderSelectByTicket(unsigned<sp/>long<sp/>_ticket)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::OrderSelect(_ticket,<sp/>SELECT_BY_TICKET,<sp/>MODE_TRADES)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Order::OrderSelect(_ticket,<sp/>SELECT_BY_TICKET,<sp/>MODE_HISTORY);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>TryOrderSelectByTicket(unsigned<sp/>long<sp/>_ticket)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::TryOrderSelect(_ticket,<sp/>SELECT_BY_TICKET,<sp/>MODE_TRADES)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Order::TryOrderSelect(_ticket,<sp/>SELECT_BY_TICKET,<sp/>MODE_HISTORY);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderSelect()<sp/>{<sp/>return<sp/>!IsSelected()<sp/>?<sp/>Order::OrderSelectByTicket(odata.ticket)<sp/>:<sp/>true;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>TryOrderSelect()<sp/>{<sp/>return<sp/>!IsSelected()<sp/>?<sp/>Order::TryOrderSelectByTicket(odata.ticket)<sp/>:<sp/>true;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderSelectDummy()<sp/>{<sp/>return<sp/>!IsSelectedDummy()<sp/>?<sp/>false<sp/>:<sp/>true;<sp/>}<sp/><sp/>//<sp/>@todo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>OrderSelectHistory()<sp/>{<sp/>return<sp/>OrderSelect(odata.ticket,<sp/>MODE_HISTORY);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Setters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>values<sp/>of<sp/>the<sp/>current<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>Update()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.last_update<sp/>+<sp/>oparams.refresh_rate<sp/>&gt;<sp/>TimeCurrent())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderSelect())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_USER_ITEM_NOT_FOUND);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>IsOpen()<sp/>could<sp/>end<sp/>up<sp/>with<sp/>&quot;Position<sp/>not<sp/>found&quot;<sp/>error.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Checks<sp/>if<sp/>order<sp/>is<sp/>updated<sp/>for<sp/>the<sp/>first<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_is_init<sp/>=<sp/>odata.price_open<sp/>==<sp/>0<sp/>||<sp/>odata.time_open<sp/>==<sp/>0;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>integer<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_is_init)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Some<sp/>values<sp/>needs<sp/>to<sp/>be<sp/>updated<sp/>only<sp/>once.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>integer<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_MAGIC);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TIME_SETUP);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TIME_SETUP_MSC);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TYPE);</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_POSITION_ID);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_BY_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_POSITION_BY_ID);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>double<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_PRICE_OPEN);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>string<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_SYMBOL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_COMMENT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>integer<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TIME_EXPIRATION);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_STATE);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TYPE_TIME);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TYPE_FILLING);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>double<sp/>values.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_VOLUME_INITIAL);<sp/>//<sp/>@fixme:<sp/>false</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_VOLUME_CURRENT);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Updates<sp/>whether<sp/>order<sp/>is<sp/>open<sp/>or<sp/>closed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.time_close<sp/>==<sp/>0<sp/>||<sp/>odata.price_close<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Updates<sp/>close<sp/>price.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.price_close<sp/>=<sp/>Order::OrderClosePrice();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(odata.price_close<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Updates<sp/>close<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.time_close<sp/>=<sp/>Order::OrderCloseTime();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(IsOpen())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>values<sp/>for<sp/>open<sp/>orders<sp/>only.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_PRICE_CURRENT);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_SL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Update(ORDER_TP);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//}<sp/>else<sp/>if<sp/>(IsPending())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>_result<sp/>&amp;=<sp/>Update(ORDER_PRICE_STOPLIMIT);<sp/>//<sp/>@fixme:<sp/>Error<sp/>69539</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>last<sp/>error.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>TODO</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>odata.SetTicket(Order::GetTicket());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>odata.close_price<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>order.time_close<sp/><sp/>=<sp/>OrderCloseTime();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Close<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>order.filling<sp/><sp/><sp/><sp/><sp/>=<sp/>GetOrderFilling();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>execution<sp/>type.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>order.comment<sp/><sp/><sp/><sp/><sp/>=<sp/>new<sp/>String(OrderComment());<sp/>//<sp/>Order<sp/>comment.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>order.position<sp/><sp/><sp/><sp/>=<sp/>OrderGetPositionID();<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Position<sp/>ticket.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>order.position_by<sp/>=<sp/>OrderGetPositionBy();<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>ticket<sp/>of<sp/>an<sp/>opposite<sp/>position.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Process<sp/>conditions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!_is_init)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProcessConditions();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!_result<sp/>||<sp/>_last_error<sp/>&gt;<sp/>ERR_NO_ERROR)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>&gt;<sp/>ERR_NO_ERROR<sp/>&amp;&amp;<sp/>_last_error<sp/>!=<sp/>4014)<sp/>{<sp/><sp/>//<sp/>@fixme:<sp/>In<sp/>MT4<sp/>(why<sp/>4014?).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Warning(StringFormat(&quot;Update<sp/>failed!<sp/>Error:<sp/>%d&quot;,<sp/>_last_error),<sp/>__FUNCTION_LINE__);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.last_update<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.ProcessLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result<sp/>&amp;&amp;<sp/>_last_error<sp/>==<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>values<sp/>of<sp/>the<sp/>current<sp/>dummy<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>UpdateDummy()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.last_update<sp/>+<sp/>oparams.refresh_rate<sp/>&gt;<sp/>TimeCurrent())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!OrderSelectDummy())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Process<sp/>conditions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ProcessConditions();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>@todo:<sp/>UpdateDummy(XXX);?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ResetError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.last_update<sp/>=<sp/>TimeCurrent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>odata.ProcessLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>GetLastError()<sp/>==<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>specific<sp/>double<sp/>value<sp/>of<sp/>the<sp/>current<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>Update(ENUM_ORDER_PROPERTY_DOUBLE<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_value<sp/>=<sp/>WRONG_VALUE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_PRICE_CURRENT,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetPriceCurrent(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_PRICE_OPEN,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetPriceOpen(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_STOPLIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_PRICE_STOPLIMIT,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetPriceStopLimit(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_SL,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_value<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_SL,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetStopLoss(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_TP,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetProfitTake(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetDouble(ORDER_VOLUME_CURRENT,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetVolume(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>specific<sp/>integer<sp/>value<sp/>of<sp/>the<sp/>current<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>Update(ENUM_ORDER_PROPERTY_INTEGER<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_value<sp/>=<sp/>WRONG_VALUE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_MAGIC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_MAGIC,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetMagicNo(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_POSITION_ID,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.position_id<sp/>=<sp/>_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_BY_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_BY_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_POSITION_BY_ID,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.position_by_id<sp/>=<sp/>_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>(ENUM_ORDER_PROPERTY_INTEGER)ORDER_REASON:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger((ENUM_ORDER_PROPERTY_INTEGER)ORDER_REASON,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetReason(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_STATE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_STATE,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetState(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TIME_EXPIRATION,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetExpiration(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@wtf:<sp/>Same<sp/>value<sp/>as<sp/>ORDER_TICKET?!</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TIME_DONE,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTimeOpen(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP:<sp/><sp/>//<sp/>Note:<sp/>In<sp/>MT5<sp/>it<sp/>conflicts<sp/>with<sp/>ORDER_TICKET.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>setup<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TIME_SETUP,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTimeOpen(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>The<sp/>time<sp/>of<sp/>placing<sp/>an<sp/>order<sp/>for<sp/>execution<sp/>in<sp/>milliseconds<sp/>since<sp/>01.01.1970.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TIME_SETUP_MSC,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTimeOpen(_value<sp/>/<sp/>1000);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TYPE,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetType(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_FILLING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TYPE_FILLING,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTypeFilling(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>Order::OrderGetInteger(ORDER_TYPE_TIME,<sp/>_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTypeTime(_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!_result)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.Ptr().Error(&quot;Error<sp/>updating<sp/>order<sp/>property!&quot;,<sp/>__FUNCTION_LINE__,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringFormat(&quot;Code:<sp/>%d,<sp/>Msg:<sp/>%s&quot;,<sp/>_last_error,<sp/>Terminal::GetErrorText(_last_error)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result<sp/>&amp;&amp;<sp/>GetLastError()<sp/>==<sp/>ERR_NO_ERROR;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>specific<sp/>string<sp/>value<sp/>of<sp/>the<sp/>current<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>Update(ENUM_ORDER_PROPERTY_STRING<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COMMENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetComment(Order::OrderGetString(ORDER_COMMENT));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_EXTERNAL_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>(ENUM_ORDER_PROPERTY_STRING)ORDER_EXTERNAL_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Not<sp/>supported<sp/>right<sp/>now.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>odata.SetExternalId(Order::OrderGetString(ORDER_EXTERNAL_ID));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SYMBOL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetSymbol(Order::OrderGetString(ORDER_SYMBOL));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Update<sp/>specific<sp/>order<sp/>value.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>UpdateValue(double<sp/>_src,<sp/>double<sp/>&amp;_dst)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_dst<sp/>=<sp/>_src;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_dst;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Conversion<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>OrderType<sp/>as<sp/>a<sp/>text.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>op_type<sp/>int<sp/>Order<sp/>operation<sp/>type<sp/>of<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>lc<sp/>bool<sp/>If<sp/>true,<sp/>return<sp/>order<sp/>operation<sp/>in<sp/>lower<sp/>case.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Return<sp/>text<sp/>representation<sp/>of<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>OrderTypeToString(ENUM_ORDER_TYPE<sp/>_cmd,<sp/>bool<sp/>_lc<sp/>=<sp/>false)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_cmd<sp/>=<sp/>_cmd<sp/>!=<sp/>NULL<sp/>?<sp/>_cmd<sp/>:<sp/>OrderType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>_res<sp/>=<sp/>StringSubstr(EnumToString(_cmd),<sp/>11);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>StringReplace(_res,<sp/>&quot;_&quot;,<sp/>&quot;<sp/>&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_lc)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StringToLower(_res);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_res;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>OrderTypeToString(bool<sp/>_lc<sp/>=<sp/>false)<sp/>{<sp/>return<sp/>OrderTypeToString(orequest.type,<sp/>_lc);<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Custom<sp/>order<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>gross<sp/>profit<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>gross<sp/>profit<sp/>value<sp/>(including<sp/>swaps,<sp/>commissions<sp/>and<sp/>fees/taxes)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>for<sp/>the<sp/>selected<sp/>order,<sp/>in<sp/>the<sp/>base<sp/>currency.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetOrderTotalProfit()<sp/>{<sp/>return<sp/>Order::OrderProfit()<sp/>-<sp/>Order::OrderTotalFees();<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>GetTotalProfit()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(odata.total_profit<sp/>==<sp/>0<sp/>||<sp/>!IsClosed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odata.total_profit<sp/>=<sp/>Order::GetOrderTotalProfit();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>odata.total_profit;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>profit<sp/>of<sp/>the<sp/>currently<sp/>selected<sp/>order<sp/>in<sp/>pips.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>profit<sp/>value<sp/>for<sp/>the<sp/>selected<sp/>order<sp/>in<sp/>pips.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>GetOrderProfitInPips()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(OrderOpenPrice()<sp/>-<sp/>SymbolInfo::GetCloseOffer(OrderSymbol(),<sp/>OrderType()))<sp/>/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SymbolInfo::GetPointSize(OrderSymbol());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Return<sp/>opposite<sp/>trade<sp/>of<sp/>command<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>cmd<sp/>int<sp/>Trade<sp/>command<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE<sp/>NegateOrderType(ENUM_ORDER_TYPE<sp/>_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ORDER_TYPE_SELL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ORDER_TYPE_BUY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Return<sp/>opposite<sp/>order<sp/>type<sp/>based<sp/>on<sp/>position<sp/>type.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>_pos<sp/>ENUM_POSITION_TYPE<sp/>Direction<sp/>of<sp/>an<sp/>open<sp/>position.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>opposite<sp/>order<sp/>type.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>ENUM_ORDER_TYPE<sp/>NegateOrderType(ENUM_POSITION_TYPE<sp/>_ptype)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_ptype)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ORDER_TYPE_SELL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ORDER_TYPE_BUY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>direction<sp/>value<sp/>of<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>op_type<sp/>int<sp/>Order<sp/>operation<sp/>type<sp/>of<sp/>the<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>1<sp/>for<sp/>buy,<sp/>-1<sp/>for<sp/>sell<sp/>orders,<sp/>otherwise<sp/>EMPTY<sp/>(-1).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>int<sp/>OrderDirection(ENUM_ORDER_TYPE<sp/>_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cmd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_SELL_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_LIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_BUY_STOP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>int<sp/>OrderDirection(ENUM_ORDER_TYPE<sp/>_cmd,<sp/>ENUM_ORDER_TYPE_VALUE<sp/>_mode)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderDirection(_cmd)<sp/>*<sp/>(_mode<sp/>==<sp/>ORDER_TYPE_SL<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>color<sp/>of<sp/>the<sp/>order<sp/>based<sp/>on<sp/>its<sp/>type.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>color<sp/>GetOrderColor(ENUM_ORDER_TYPE<sp/>_cmd<sp/>=<sp/>NULL,<sp/>color<sp/>cbuy<sp/>=<sp/>Blue,<sp/>color<sp/>csell<sp/>=<sp/>Red)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_cmd<sp/>==<sp/>NULL)<sp/>_cmd<sp/>=<sp/>(ENUM_ORDER_TYPE)OrderType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderDirection(_cmd)<sp/>&gt;<sp/>0<sp/>?<sp/>cbuy<sp/>:<sp/>csell;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Order<sp/>property<sp/>getters<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_INTEGER<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetinteger</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>long<sp/>OrderGetInteger(ENUM_ORDER_PROPERTY_INTEGER<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>_result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Print(&quot;OrderGetInteger(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)...&quot;);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>__MQL__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TICKET:<sp/><sp/>//<sp/>Note:<sp/>In<sp/>MT,<sp/>the<sp/>value<sp/>conflicts<sp/>with<sp/>ORDER_TIME_SETUP.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderTicket();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>OrderOpenTime();<sp/><sp/>//<sp/>@fixit<sp/>Are<sp/>we<sp/>sure?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>OrderGetInteger(ORDER_TIME_SETUP)<sp/>*<sp/>1000;<sp/><sp/>//<sp/>@fixit<sp/>We<sp/>need<sp/>more<sp/>precision.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderExpiration();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderCloseTime();<sp/><sp/>//<sp/>@fixit<sp/>Are<sp/>we<sp/>sure?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>OrderGetInteger(ORDER_TIME_DONE)<sp/>*<sp/>1000;<sp/><sp/>//<sp/>@fixit<sp/>We<sp/>need<sp/>more<sp/>precision.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_STATE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_FILLING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_REASON:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_MAGIC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderMagicNumber();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>OrderGetPositionID();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_BY_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_BY_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Print(&quot;OrderGetInteger(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)<sp/>=<sp/>&quot;,<sp/>_result,<sp/>&quot;,<sp/>error<sp/>=<sp/>&quot;,<sp/>_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>!=<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError((unsigned<sp/>short)_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_INTEGER,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderGetInteger(ENUM_ORDER_PROPERTY_INTEGER<sp/>property_id,<sp/>long<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>(long)OrderGetInteger(property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_INTEGER,<sp/>_out)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_DOUBLE<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>double</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetdouble</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderGetDouble(ENUM_ORDER_PROPERTY_DOUBLE<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>_result<sp/>=<sp/>WRONG_VALUE;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Print(&quot;OrderGetDouble(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)...&quot;);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_INITIAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderLots();<sp/><sp/>//<sp/>@fixit<sp/>Are<sp/>we<sp/>sure?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderLots();<sp/><sp/>//<sp/>@fixit<sp/>Are<sp/>we<sp/>sure?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderOpenPrice();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderStopLoss();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderTakeProfit();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>SymbolInfo::GetBid(Order::OrderSymbol());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_STOPLIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Print(&quot;OrderGetDouble(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)<sp/>=<sp/>&quot;,<sp/>_result,<sp/>&quot;,<sp/>error<sp/>=<sp/>&quot;,<sp/>_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>!=<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError((unsigned<sp/>short)_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_DOUBLE,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderGetDouble(ENUM_ORDER_PROPERTY_DOUBLE<sp/>property_id,<sp/>double<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>OrderGetDouble(property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_DOUBLE,<sp/>_out)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_STRING<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/trading/ordergetstring</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>OrderGetString(ENUM_ORDER_PROPERTY_STRING<sp/>property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ResetLastError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Print(&quot;OrderGetString(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)...&quot;);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(property_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SYMBOL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderSymbol();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COMMENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>=<sp/>::OrderComment();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_EXTERNAL_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>_last_error<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__debug__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Print(&quot;OrderGetString(&quot;,<sp/>EnumToString(property_id),<sp/>&quot;)<sp/>=<sp/>&quot;,<sp/>_result,<sp/>&quot;,<sp/>error<sp/>=<sp/>&quot;,<sp/>_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_last_error<sp/>!=<sp/>ERR_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError((unsigned<sp/>short)_last_error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_STRING,<sp/>_result);</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>bool<sp/>OrderGetString(ENUM_ORDER_PROPERTY_STRING<sp/>property_id,<sp/>string<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>OrderGetString(property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetParam(property_id,<sp/>selected_ticket_type,<sp/>ORDER_SELECT_DATA_TYPE_STRING,<sp/>_out)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>for<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>long&amp;<sp/>_out</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Reference<sp/>to<sp/>output<sp/>value<sp/>(the<sp/>same<sp/>as<sp/>returned<sp/>from<sp/>the<sp/>function).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>long</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property<sp/>(same<sp/>as<sp/>for<sp/>`_out`<sp/>variable).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>long<sp/>OrderGetValue(int<sp/>property_id,<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type,<sp/>long<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_NONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_ACTIVE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::OrderGetInteger((ENUM_ORDER_PROPERTY_INTEGER)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_HISTORY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryOrderGetInteger(selected_ticket_id,<sp/>(ENUM_ORDER_PROPERTY_INTEGER)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_DEAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryDealGetInteger(selected_ticket_id,<sp/>(ENUM_DEAL_PROPERTY_INTEGER)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_POSITION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::PositionGetInteger((ENUM_POSITION_PROPERTY_INTEGER)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_out;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>for<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>double&amp;<sp/>_out</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Reference<sp/>to<sp/>output<sp/>value<sp/>(the<sp/>same<sp/>as<sp/>returned<sp/>from<sp/>the<sp/>function).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>double</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property<sp/>(same<sp/>as<sp/>for<sp/>`_out`<sp/>variable).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>double<sp/>OrderGetValue(int<sp/>property_id,<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type,<sp/>double<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_NONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_ACTIVE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::OrderGetDouble((ENUM_ORDER_PROPERTY_DOUBLE)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_HISTORY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryOrderGetDouble(selected_ticket_id,<sp/>(ENUM_ORDER_PROPERTY_DOUBLE)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_DEAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryDealGetDouble(selected_ticket_id,<sp/>(ENUM_DEAL_PROPERTY_DOUBLE)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_POSITION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::PositionGetDouble((ENUM_POSITION_PROPERTY_DOUBLE)property_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_out;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>for<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>property_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string&amp;<sp/>_out</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Reference<sp/>to<sp/>output<sp/>value<sp/>(the<sp/>same<sp/>as<sp/>returned<sp/>from<sp/>the<sp/>function).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property<sp/>(same<sp/>as<sp/>for<sp/>`_out`<sp/>variable).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>OrderGetValue(int<sp/>_prop_id,<sp/>ENUM_ORDER_SELECT_TYPE<sp/>_type,<sp/>string<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_NONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>&quot;&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_ACTIVE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::OrderGetString((ENUM_ORDER_PROPERTY_STRING)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_HISTORY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryOrderGetString(selected_ticket_id,<sp/>(ENUM_ORDER_PROPERTY_STRING)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_DEAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::HistoryDealGetString(selected_ticket_id,<sp/>(ENUM_DEAL_PROPERTY_STRING)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_POSITION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out<sp/>=<sp/>::PositionGetString((ENUM_POSITION_PROPERTY_STRING)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_out;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>int<sp/>_prop_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Mixed<sp/>identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_TYPE<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Type<sp/>of<sp/>a<sp/>property<sp/>(active,<sp/>history,<sp/>deal,<sp/>position).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_DATA_TYPE<sp/>data_type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Type<sp/>of<sp/>the<sp/>value<sp/>requested<sp/>(integer,<sp/>double,<sp/>string).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_SELECT_DATA_TYPE<sp/>data_type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Type<sp/>of<sp/>the<sp/>value<sp/>requested<sp/>(integer,<sp/>double,<sp/>string).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>X&amp;<sp/>_out</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>error,<sp/>information<sp/>can<sp/>be<sp/>obtained<sp/>using<sp/>GetLastError()<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>template<sp/>&lt;typename<sp/>X&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>X<sp/>OrderGetParam(int<sp/>_prop_id,<sp/>ENUM_ORDER_SELECT_TYPE<sp/>_type,<sp/>ENUM_ORDER_SELECT_DATA_TYPE<sp/>_data_type,<sp/>X<sp/>&amp;_out)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(selected_ticket_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_NONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_ACTIVE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_HISTORY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(_prop_id,<sp/>selected_ticket_type,<sp/>_out);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_DEAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_data_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_INTEGER:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_TIME,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>((int)OrderGetValue(DEAL_TYPE,<sp/>_type,<sp/>_out))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_TYPE_BUY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_TYPE_SELL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_STATE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_TIME_MSC,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_FILLING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_MAGIC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_MAGIC,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_REASON:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>((int)OrderGetValue(DEAL_REASON,<sp/>_type,<sp/>_out))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_CLIENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_CLIENT;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_MOBILE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_MOBILE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_WEB:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_WEB;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_EXPERT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_EXPERT;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_SL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_TP;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>DEAL_REASON_SO:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_SO;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_POSITION_ID,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_BY_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_DOUBLE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_INITIAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_VOLUME,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_PRICE,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(DEAL_PRICE,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_STOPLIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_STRING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SYMBOL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COMMENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_EXTERNAL_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_TYPE_POSITION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_data_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_INTEGER:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_TIME,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>((int)OrderGetValue(POSITION_TYPE,<sp/>_type,<sp/>_out))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_TYPE_BUY:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_TYPE_BUY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_TYPE_SELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_TYPE_SELL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_STATE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_TIME_MSC,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_FILLING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_MAGIC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_MAGIC,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_REASON:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>((int)OrderGetValue(POSITION_REASON,<sp/>_type,<sp/>_out))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_REASON_CLIENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_CLIENT;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_REASON_MOBILE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_MOBILE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_REASON_WEB:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_WEB;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>POSITION_REASON_EXPERT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(X)ORDER_REASON_EXPERT;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_IDENTIFIER,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_BY_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_DOUBLE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_INITIAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_VOLUME,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_PRICE_OPEN,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_SL,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_TP,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_PRICE_CURRENT,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_STOPLIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@fixme</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SELECT_DATA_TYPE_STRING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SYMBOL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_SYMBOL,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COMMENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_COMMENT,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_EXTERNAL_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(POSITION_EXTERNAL_ID,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>OrderGetValue(_prop_id,<sp/>_type,<sp/>_out);</highlight></codeline>
<codeline><highlight class="normal">#endif;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_DOUBLE<sp/>_prop_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>long</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>OrderGet(ENUM_ORDER_PROPERTY_DOUBLE<sp/>_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.price_current;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.price_open;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_PRICE_STOPLIMIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.price_stoplimit;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.sl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TP:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.tp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_CURRENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.volume;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_VOLUME_INITIAL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.volume;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>EMPTY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_INTEGER<sp/>_prop_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>long</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>OrderGet(ENUM_ORDER_PROPERTY_INTEGER<sp/>_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_MAGIC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(long)odata.magic;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_STATE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.state;</highlight></codeline>
<codeline><highlight class="normal">#ifndef<sp/>__MQL__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TICKET:<sp/><sp/>//<sp/>Note:<sp/>In<sp/>MT,<sp/>the<sp/>value<sp/>conflicts<sp/>with<sp/>ORDER_TIME_SETUP.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(long)odata.ticket;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP:<sp/><sp/>//<sp/>Note:<sp/>In<sp/>MT5,<sp/>the<sp/>value<sp/>conflicts<sp/>with<sp/>ORDER_TICKET.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_DONE_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>execution<sp/>or<sp/>cancellation<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.time_open;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_EXPIRATION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.expiration;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TIME_SETUP_MSC:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Order<sp/>setup<sp/>time.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.time_open;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.type;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_FILLING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.type_filling;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_TYPE_TIME:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.type_time;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(long)odata.position;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_POSITION_BY_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_POSITION_BY_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(long)odata.position_by;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>case<sp/>ORDER_REASON:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>EMPTY;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>the<sp/>requested<sp/>property<sp/>of<sp/>an<sp/>order.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_PROPERTY_STRING<sp/>_prop_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Identifier<sp/>of<sp/>a<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>long</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@docs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>-<sp/>https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>OrderGet(ENUM_ORDER_PROPERTY_STRING<sp/>_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_prop_id)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COMMENT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.comment;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_SYMBOL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.symbol;</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>ORDER_EXTERNAL_ID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>(ENUM_ORDER_PROPERTY_STRING)ORDER_EXTERNAL_ID:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>odata.ext_id;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>&quot;&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Conditions<sp/>and<sp/>actions<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Process<sp/>order<sp/>conditions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>ProcessConditions()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>_result<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(IsOpen()<sp/>&amp;&amp;<sp/>ShouldCloseOrder())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MqlParam<sp/>_args[]<sp/>=<sp/>{{TYPE_STRING,<sp/>0,<sp/>0,<sp/>&quot;Close<sp/>condition&quot;}};</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_args[0].string_value<sp/>+=<sp/>StringFormat(&quot;:<sp/>%s&quot;,<sp/>EnumToString(oparams.cond_close));</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_result<sp/>&amp;=<sp/>Order::ExecuteAction(ORDER_ACTION_CLOSE,<sp/>_args);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Checks<sp/>for<sp/>order<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_CONDITION<sp/>_cond</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Order<sp/>condition.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>MqlParam<sp/>_args</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Trade<sp/>action<sp/>arguments.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>the<sp/>condition<sp/>is<sp/>met.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>CheckCondition(ENUM_ORDER_CONDITION<sp/>_cond,<sp/>MqlParam<sp/>&amp;_args[])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_IN_LOSS:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetProfit()<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_IN_PROFIT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>GetProfit()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_IS_CLOSED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>IsClosed();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_IS_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>IsOpen();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_LIFETIME_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_LIFETIME_LT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ArraySize(_args)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>_arg_value<sp/>=<sp/>Convert::MqlParamToInteger(_args[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_LIFETIME_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TimeCurrent()<sp/>-<sp/>OrderGet(ORDER_TIME_SETUP)<sp/>&gt;<sp/>_arg_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_LIFETIME_LT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TimeCurrent()<sp/>-<sp/>OrderGet(ORDER_TIME_SETUP)<sp/>&lt;<sp/>_arg_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_EQ_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_LT_ARG:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ArraySize(_args)<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>First<sp/>argument<sp/>is<sp/>enum<sp/>value<sp/>(order<sp/>property).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>_prop_id<sp/>=<sp/>_args[0].integer_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Second<sp/>argument<sp/>is<sp/>the<sp/>actual<sp/>value<sp/>with<sp/>compare<sp/>with.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_args[1].type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_DOUBLE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_FLOAT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update((ENUM_ORDER_PROPERTY_DOUBLE)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_EQ_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_DOUBLE)_prop_id)<sp/>==<sp/>_args[1].double_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_DOUBLE)_prop_id)<sp/>&gt;<sp/>_args[1].double_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_LT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_DOUBLE)_prop_id)<sp/>&lt;<sp/>_args[1].double_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_INT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_LONG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_UINT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_ULONG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update((ENUM_ORDER_PROPERTY_INTEGER)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_EQ_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_INTEGER)_prop_id)<sp/>==<sp/>_args[1].integer_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_INTEGER)_prop_id)<sp/>&gt;<sp/>_args[1].integer_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_LT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_INTEGER)_prop_id)<sp/>&lt;<sp/>_args[1].integer_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_STRING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update((ENUM_ORDER_PROPERTY_STRING)_prop_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_STRING)_prop_id)<sp/>==<sp/>_args[1].string_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_EQ_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_STRING)_prop_id)<sp/>==<sp/>_args[1].string_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_GT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_STRING)_prop_id)<sp/>&gt;<sp/>_args[1].string_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_COND_PROP_LT_ARG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderGet((ENUM_ORDER_PROPERTY_STRING)_prop_id)<sp/>&lt;<sp/>_args[1].string_value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>order<sp/>condition:<sp/>%s!&quot;,<sp/>EnumToString(_cond),<sp/>__FUNCTION_LINE__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SetUserError(ERR_INVALID_PARAMETER);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>CheckCondition(ENUM_ORDER_CONDITION<sp/>_cond)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlParam<sp/>_args[]<sp/>=<sp/>{};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::CheckCondition(_cond,<sp/>_args);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Execute<sp/>order<sp/>action.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>ENUM_ORDER_ACTION<sp/>_action</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Order<sp/>action<sp/>to<sp/>execute.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>MqlParam<sp/>_args</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Trade<sp/>action<sp/>arguments.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Returns<sp/>true<sp/>when<sp/>the<sp/>condition<sp/>is<sp/>met.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>ExecuteAction(ENUM_ORDER_ACTION<sp/>_action,<sp/>MqlParam<sp/>&amp;_args[])<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_action)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_ACTION_CLOSE:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>_comment<sp/>=<sp/>ArraySize(_args)<sp/>&gt;<sp/>0<sp/>?<sp/>_args[0].string_value<sp/>:<sp/>__FUNCTION__;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(oparams.dummy)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>false:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>OrderClose(_comment);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>true:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetPriceClose(SymbolInfo::GetCloseOffer(symbol,<sp/>odata.type));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetTimeClose(DateTime::TimeTradeServer());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odata.SetComment(_comment);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>ORDER_ACTION_OPEN:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!oparams.dummy<sp/>?<sp/>OrderSend()<sp/>&gt;=<sp/>0<sp/>:<sp/>OrderSendDummy()<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;Invalid<sp/>order<sp/>action:<sp/>%s!&quot;,<sp/>EnumToString(_action),<sp/>__FUNCTION_LINE__));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>ExecuteAction(ENUM_ORDER_ACTION<sp/>_action)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MqlParam<sp/>_args[]<sp/>=<sp/>{};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>Order::ExecuteAction(_action,<sp/>_args);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Printer<sp/>methods<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>order<sp/>details<sp/>in<sp/>text.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>string<sp/>ToString()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>StringFormat(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Order<sp/>Details:<sp/>Ticket:<sp/>%d;<sp/>Time:<sp/>%s;<sp/>Comment:<sp/>%s;<sp/>Commision:<sp/>%g;<sp/>Symbol:<sp/>%s;<sp/>Type:<sp/>%s,<sp/>Expiration:<sp/>%s;<sp/>&quot;<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Open<sp/>Price:<sp/>%g,<sp/>Close<sp/>Price:<sp/>%g,<sp/>Take<sp/>Profit:<sp/>%g,<sp/>Stop<sp/>Loss:<sp/>%g;<sp/>&quot;<sp/>+<sp/>&quot;Swap:<sp/>%g;<sp/>Lot<sp/>size:<sp/>%g&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderTicket(),<sp/>DateTime::TimeToStr(TimeCurrent(),<sp/>TIME_DATE<sp/>|<sp/>TIME_MINUTES<sp/>|<sp/>TIME_SECONDS),<sp/>OrderComment(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrderCommission(),<sp/>OrderSymbol(),<sp/>OrderTypeToString(OrderType()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DateTime::TimeToStr(OrderExpiration(),<sp/>TIME_DATE<sp/>|<sp/>TIME_MINUTES),<sp/>DoubleToStr(OrderOpenPrice(),<sp/>Digits),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoubleToStr(OrderClosePrice(),<sp/>Digits),<sp/>OrderProfit(),<sp/>OrderStopLoss(),<sp/>OrderSwap(),<sp/>OrderLots());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>order<sp/>details<sp/>in<sp/>text.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>ToString(long<sp/>&amp;_props[],<sp/>ENUM_DATATYPE<sp/>_type<sp/>=<sp/>TYPE_DOUBLE,<sp/>string<sp/>_dlm<sp/>=<sp/>&quot;;&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>_output<sp/>=<sp/>&quot;&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(_type)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_DOUBLE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Array::ArraySize(_props);<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_output<sp/>+=<sp/>StringFormat(&quot;%g%s&quot;,<sp/>OrderGet((ENUM_ORDER_PROPERTY_DOUBLE)_props[i]),<sp/>_dlm);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_LONG:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Array::ArraySize(_props);<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_output<sp/>+=<sp/>StringFormat(&quot;%d%s&quot;,<sp/>OrderGet((ENUM_ORDER_PROPERTY_INTEGER)_props[i]),<sp/>_dlm);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>TYPE_STRING:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Array::ArraySize(_props);<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_output<sp/>+=<sp/>StringFormat(&quot;%d%s&quot;,<sp/>OrderGet((ENUM_ORDER_PROPERTY_STRING)_props[i]),<sp/>_dlm);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger().Error(StringFormat(&quot;%s:<sp/>Unsupported<sp/>type:<sp/>%s!&quot;,<sp/>__FUNCTION_LINE__,<sp/>EnumToString(_type)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>&quot;&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Prints<sp/>information<sp/>about<sp/>the<sp/>selected<sp/>order<sp/>in<sp/>the<sp/>log.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@see<sp/>http://docs.mql4.com/trading/orderprint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>void<sp/>OrderPrint()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQLBUILD__</highlight></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL4__</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>::OrderPrint();</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Print(ToString());</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;%s&quot;,<sp/>ToString());</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifdef<sp/>__MQL5__</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Assigns<sp/>values<sp/>to<sp/>static<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal">ENUM_ORDER_SELECT_TYPE<sp/>Order::selected_ticket_type<sp/>=<sp/>ORDER_SELECT_TYPE_NONE;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>long<sp/>Order::selected_ticket_id<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#endif<sp/>ORDER_MQH</highlight></codeline>
    </programlisting>
    <location file="Order.mqh"/>
  </compounddef>
</doxygen>
